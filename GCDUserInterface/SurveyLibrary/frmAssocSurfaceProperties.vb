Imports GCDCore.Project

Namespace SurveyLibrary

    Public Class frmAssocSurfaceProperties

        Private Enum AssociatedSurfaceMethods
            Browse
            PointDensity
            SlopePercent
            SlopeDegree
            Roughness
            PointQuality3D
            InterpolationError
        End Enum

        Private m_Assoc As AssocSurface
        Private DEM As DEMSurvey
        Private m_frmPointDensity As frmPointDensity
        Private m_ImportForm As frmImportRaster
        'Private m_SurfaceRoughnessForm As frmSurfaceRoughness

        ' This method tracks whether the surface is from an existing
        ' raster or to be generated by GCD from slope or point density.
        ' Note that browsing to an existing point density or slope raster
        ' is considered "Browsing".
        Private m_eMethod As AssociatedSurfaceMethods

        Public ReadOnly Property AssociatedSurface As AssocSurface
            Get
                Return m_Assoc
            End Get
        End Property

        Public Sub New(parentDEM As DEMSurvey, assoc As AssocSurface)

            ' This call is required by the Windows Form Designer.
            InitializeComponent()

            m_eMethod = AssociatedSurfaceMethods.Browse
            DEM = parentDEM
            m_Assoc = assoc

        End Sub

        Private Sub SurfacePropertiesForm_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load

            ttpTooltip.SetToolTip(btnCancel, "Cancel and close this form.")
            ttpTooltip.SetToolTip(btnHelp, My.Resources.ttpHelp)
            ttpTooltip.SetToolTip(cboType, "Associated surface type. Use this to define what physical phenomenon this associated surface represents.")
            ttpTooltip.SetToolTip(btnBrowse, "Browse and choose an existing raster that represents the associated surface.")
            ttpTooltip.SetToolTip(btnSlopePercent, "Calculate a slope raster - in percent - from the DEM survey.")
            ttpTooltip.SetToolTip(btnSlopeDegree, "Calculate a slope raster - in degrees - from the DEM survey.")
            ttpTooltip.SetToolTip(btnDensity, "Calculate a point density raster from the DEM Survey. You will be presented with options for the point density calculation.")
            ttpTooltip.SetToolTip(btnRoughness, "Calculate a surface roughness raster from space delimited point cloud file.")

            cboType.Items.Clear()
            cboType.Items.Add(New naru.db.NamedObject(AssociatedSurfaceMethods.PointDensity, "Point Density"))
            cboType.Items.Add(New naru.db.NamedObject(AssociatedSurfaceMethods.SlopeDegree, "Slope (Degrees)"))
            cboType.Items.Add(New naru.db.NamedObject(AssociatedSurfaceMethods.SlopePercent, "Slope (Percent)"))
            cboType.Items.Add(New naru.db.NamedObject(AssociatedSurfaceMethods.Roughness, "Roughness"))
            cboType.Items.Add(New naru.db.NamedObject(AssociatedSurfaceMethods.PointQuality3D, "3D Point Quality"))
            cboType.Items.Add(New naru.db.NamedObject(AssociatedSurfaceMethods.InterpolationError, "Interpolation Error"))
            cboType.SelectedIndex = cboType.Items.Add(New naru.db.NamedObject(AssociatedSurfaceMethods.Browse, "Unknown"))

            btnDensity.Enabled = ProjectManager.IsArcMap
            btnRoughness.Enabled = ProjectManager.IsArcMap

            If Not m_Assoc Is Nothing Then
                txtName.Text = m_Assoc.Name
                txtProjectRaster.Text = m_Assoc.Raster.RelativePath
                txtProjectRaster.ReadOnly = True
                btnSlopePercent.Visible = False
                btnDensity.Visible = False
                btnBrowse.Visible = False
                btnSlopeDegree.Visible = False
                btnRoughness.Visible = False
                txtOriginalRaster.Width = txtName.Width

                cboType.Text = m_Assoc.AssocSurfaceType


                'For i As Integer = 0 To cboType.Items.Count - 1
                '    If String.Compare(cboType.Items(i).ToString.Replace("(", "").Replace(")", ""), m_Assoc.AssocSurfaceType, True) = 0 Then
                '        cboType.SelectedIndex = i
                '        Exit For
                '    End If
                'Next
                cboType.Select()
            End If

        End Sub

        Private Function GetAssociatedSurfaceType(nSurfaceID) As AssociatedSurfaceMethods

            If TypeOf m_Assoc Is AssocSurface Then
                For Each item As naru.db.NamedObject In cboType.Items
                    If String.Compare(item.Name, m_Assoc.AssocSurfaceType, True) = 0 Then
                        Return DirectCast(Convert.ToInt32(item.ID), AssociatedSurfaceMethods)
                    End If
                Next
            End If

            Return AssociatedSurfaceMethods.Browse

        End Function

        Private Sub btnOK_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnOK.Click

            If Not ValidateForm() Then
                DialogResult = System.Windows.Forms.DialogResult.None
                Exit Sub
            End If

            Cursor = System.Windows.Forms.Cursors.WaitCursor

            Try
                If m_Assoc Is Nothing Then
                    If Not ImportRaster() Then
                        DialogResult = System.Windows.Forms.DialogResult.None
                        Return
                    End If

                    m_Assoc = New AssocSurface(txtName.Text.Trim(), ProjectManager.Project.GetAbsolutePath(txtProjectRaster.Text), cboType.Text, DEM)
                    DEM.AssocSurfaces.Add(m_Assoc.Name, m_Assoc)
                Else
                    m_Assoc.Name = txtName.Text.Trim()
                    m_Assoc.AssocSurfaceType = cboType.Text
                End If

                ProjectManager.Project.Save()

            Catch ex As Exception
                naru.error.ExceptionUI.HandleException(ex, "The associated surface failed to save to the GCD project file. The associated surface raster still exists.")
                DialogResult = System.Windows.Forms.DialogResult.None
            Finally
                Cursor = System.Windows.Forms.Cursors.Default
            End Try

        End Sub

        Private Function ImportRaster() As Boolean

            Dim bRasterImportSuccessful = False
            Dim fiOutput As New IO.FileInfo(txtProjectRaster.Text)

            Try
                ' Make sure that the destination folder exists where the associated surface will be output
                Dim sWorkspacePath As String = IO.Path.GetDirectoryName(txtProjectRaster.Text)
                IO.Directory.CreateDirectory(sWorkspacePath)


                ' Create the slope surface or point density rasters
                Select Case m_eMethod
                    Case AssociatedSurfaceMethods.SlopeDegree,
                    AssociatedSurfaceMethods.SlopePercent,
                    AssociatedSurfaceMethods.PointDensity,
                    AssociatedSurfaceMethods.Roughness

                        Select Case m_eMethod
                            Case AssociatedSurfaceMethods.SlopeDegree
                                GCDConsoleLib.RasterOperators.SlopeDegrees(DEM.Raster.Raster, fiOutput)

                            Case AssociatedSurfaceMethods.SlopePercent
                                GCDConsoleLib.RasterOperators.SlopePercent(DEM.Raster.Raster, fiOutput)

                            Case AssociatedSurfaceMethods.PointDensity
                                GCDConsoleLib.RasterOperators.PointDensity(DEM.Raster.Raster, m_frmPointDensity.ucPointCloud.SelectedItem, txtProjectRaster.Text, GCDConsoleLib.RasterOperators.KernelShapes.Square, "4")

                            Case AssociatedSurfaceMethods.Roughness
                                'm_SurfaceRoughnessForm.CalculateRoughness(txtProjectRaster.Text, gDEMRaster)

                        End Select

                        ' Build raster pyramids
                        If ProjectManager.PyramidManager.AutomaticallyBuildPyramids(GCDCore.RasterPyramidManager.PyramidRasterTypes.AssociatedSurfaces) Then
                            ProjectManager.PyramidManager.PerformRasterPyramids(GCDCore.RasterPyramidManager.PyramidRasterTypes.AssociatedSurfaces, fiOutput)
                        End If

                    Case Else
                        m_ImportForm.ProcessRaster()

                End Select

                bRasterImportSuccessful = True

            Catch ex As Exception
                ' Something went wrong. Check if the raster exists and safely attempt to clean it up if it does.
                If fiOutput.Exists Then
                    Try
                        GCDConsoleLib.Raster.Delete(fiOutput)
                    Catch ex2 As Exception
                        Debug.Print("ERROR attempting to delete associated surface raster after an error during its creation")
                        Debug.Print(ex.Message)
                    End Try
                End If
            End Try

            Return bRasterImportSuccessful

        End Function

        Private Function ValidateForm() As Boolean

            ' Safety check against names with only blank spaces
            txtName.Text = txtName.Text.Trim()

            If String.IsNullOrEmpty(txtName.Text) Then
                MsgBox("Please provide a name for the associated surface.", MsgBoxStyle.Information, GCDCore.Properties.Resources.ApplicationNameLong)
                txtName.Focus()
                Return False
            Else
                If Not DEM.IsAssocNameUnique(txtName.Text, m_Assoc) Then
                    MsgBox("The name '" & txtName.Text & "' is already in use by another associated surface within this survey. Please choose a unique name.", MsgBoxStyle.Exclamation, GCDCore.Properties.Resources.ApplicationNameLong)
                    txtName.Select()
                    Return False
                End If

            End If

            If String.IsNullOrEmpty(txtProjectRaster.Text) Then
                If m_eMethod = AssociatedSurfaceMethods.Browse Then
                    MsgBox("You must either browse and select an existing raster for this associated surface, or choose to generate a slope or point density raster from the DEM Survey raster.", MsgBoxStyle.Information, GCDCore.Properties.Resources.ApplicationNameLong)
                    Return False
                End If
            Else
                If m_Assoc Is Nothing AndAlso IO.File.Exists(txtProjectRaster.Text) Then
                    MsgBox("The associated surface project raster path already exists. Changing the name of the associated surface will change the raster path.", MsgBoxStyle.Information, GCDCore.Properties.Resources.ApplicationNameLong)
                    Return False
                End If
            End If

            If cboType.SelectedItem Is Nothing Then
                MsgBox("Please select an error type to continue.", MsgBoxStyle.Exclamation, GCDCore.Properties.Resources.ApplicationNameLong)
                cboType.Focus()
                Return False
            End If

            Return True

        End Function

        Private Sub btnBrowse_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnBrowse.Click

            If Not TypeOf m_ImportForm Is frmImportRaster Then
                m_ImportForm = New frmImportRaster(DEM.Raster.Raster, DEM, frmImportRaster.ImportRasterPurposes.AssociatedSurface, "Associated Surface")
            End If

            m_ImportForm.txtName.Text = txtName.Text
            If m_ImportForm.ShowDialog = System.Windows.Forms.DialogResult.OK Then
                txtName.Text = m_ImportForm.txtName.Text
                txtOriginalRaster.Text = m_ImportForm.ucRaster.SelectedItem.GISFileInfo.FullName
            End If

        End Sub

        Private Sub btnSlope_Click(sender As System.Object, e As System.EventArgs) Handles btnSlopePercent.Click
            SlopeTypeSelected(AssociatedSurfaceMethods.SlopePercent)
        End Sub

        Private Sub btnSlopeDegree_Click(sender As System.Object, e As System.EventArgs) Handles btnSlopeDegree.Click
            SlopeTypeSelected(AssociatedSurfaceMethods.SlopeDegree)
        End Sub

        Private Sub SlopeTypeSelected(eType As AssociatedSurfaceMethods)

            ' Assign a name if the user hasn't already
            If String.IsNullOrEmpty(txtName.Text) Then
                txtName.Text = String.Format("Slope {0}", IIf(m_eMethod = AssociatedSurfaceMethods.SlopeDegree, "Degrees", "Percent"))
            End If

            m_eMethod = eType

            ' Select the appropriate type in the dropdown box
            For i As Integer = 0 To cboType.Items.Count - 1
                If DirectCast(cboType.Items(i), naru.db.NamedObject).ID = m_eMethod Then
                    cboType.SelectedIndex = i
                    Exit For
                End If
            Next

            txtOriginalRaster.Text = DEM.Raster.RasterPath.FullName

            System.Windows.Forms.MessageBox.Show("The slope raster will be generated after you click OK.", GCDCore.Properties.Resources.ApplicationNameLong, System.Windows.Forms.MessageBoxButtons.OK, System.Windows.Forms.MessageBoxIcon.Information)

        End Sub

        Private Sub btnDensity_Click(sender As System.Object, e As System.EventArgs) Handles btnDensity.Click

            If m_frmPointDensity Is Nothing Then
                m_frmPointDensity = New frmPointDensity(ProjectManager.Project.Units.VertUnit)
            End If

            If m_frmPointDensity.ShowDialog = System.Windows.Forms.DialogResult.OK Then
                If String.IsNullOrEmpty(txtName.Text) Then
                    txtName.Text = "PDensity"
                End If
                m_eMethod = AssociatedSurfaceMethods.PointDensity

                'Dim sOutputRasterPath As String = GISCode.ChangeDetection.OutputManager.GetAssociatedSurfaceCopyPath(ProjectManager.ds.DEMSurvey.FindByDEMSurveyID(m_nDEMSurveyID).Name, txtName.Text, txtName.Text)
                'sOutputRasterPath = IO.Path.ChangeExtension(sOutputRasterPath, GetDefaultRasterExtension)
                'txtSource.Text = FileSystem.GetNewSafeFileName(sOutputRasterPath)
                '
                ' Select the appropriate type in the dropdown box
                '
                For i As Integer = 0 To cboType.Items.Count - 1
                    If String.Compare(cboType.Items(i).ToString, "Point Density", True) = 0 Then
                        cboType.SelectedIndex = i
                        Exit For
                    End If
                Next

                txtOriginalRaster.Text = m_frmPointDensity.ucPointCloud.SelectedItem.GISFileInfo.FullName
            End If
        End Sub

        Private Sub txtName_TextChanged(sender As Object, e As System.EventArgs) Handles txtName.TextChanged

            If m_Assoc Is Nothing Then
                txtProjectRaster.Text = ProjectManager.OutputManager.AssociatedSurfaceRasterPath(DEM.Name, txtName.Text).FullName
            End If

        End Sub

        Private Sub btnRoughness_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnRoughness.Click

            'If m_SurfaceRoughnessForm Is Nothing Then
            '    Dim dReferenceResolution As Double = Math.Abs(DEMSurveyRaster.Extent.CellWidth)
            '    m_SurfaceRoughnessForm = New frmSurfaceRoughness(dReferenceResolution)
            'End If

            'If m_SurfaceRoughnessForm.ShowDialog = System.Windows.Forms.DialogResult.OK Then
            '    If String.IsNullOrEmpty(txtName.Text) Then
            '        txtName.Text = "Roughness"
            '    End If
            '    m_eMethod = AssociatedSurfaceMethods.Roughness

            '    ' Select the appropriate type in the dropdown box
            '    '
            '    For i As Integer = 0 To cboType.Items.Count - 1
            '        If String.Compare(cboType.Items(i).ToString, "Roughness", True) = 0 Then
            '            cboType.SelectedIndex = i
            '            Exit For
            '        End If
            '    Next
            '    Try
            '        txtOriginalRaster.Text = m_SurfaceRoughnessForm.ucToPCAT_Inputs.txtBox_RawPointCloudFile.Text
            '    Catch ex As Exception
            '        naru.error.ExceptionUI.HandleException(ex)
            '    End Try
            'End If

        End Sub

        Private Sub btnHelp_Click(sender As System.Object, e As System.EventArgs) Handles btnHelp.Click
            Process.Start(GCDCore.Properties.Resources.HelpBaseURL & "gcd-command-reference/gcd-project-explorer/d-dem-context-menu/iv-add-associated-surface")
        End Sub
    End Class

End Namespace