Imports System.Windows.Forms
Imports GCDCore.Project

Namespace ChangeDetection

    Public Class frmDoDProperties

        'Private m_pArcMap As ESRI.ArcGIS.ArcMapUI.IMxApplication
        Private m_bUserEditedName As Boolean
        Private m_frmSpatialCoherence As frmCoherenceProperties

        ' These are the results of the analysis. They are not populated until
        ' the user clicks OK and the change detection completes successfully.
        Private m_DoD As DoDBase

        ' Initial DEM Surveys to select. (User right clicked on a pair of DEMs
        ' in the project explorer and chose to add a new DoD for the same DEMs.
        Private m_InitialNewDEM As DEMSurvey
        Private m_InitialOldDEM As DEMSurvey

        ''' <summary>
        ''' Retrieve the GCD project dataset DoD row generated by the change detection
        ''' </summary>
        ''' <returns>GCD project dataset DoD row generated by the change detection</returns>
        ''' <remarks>Returns nothing if not calculated.</remarks>
        Public ReadOnly Property DoD As DoDBase
            Get
                Return m_DoD
            End Get
        End Property

        Public Sub New()

            ' This call is required by the designer.
            InitializeComponent()

            ' Add any initialization after the InitializeComponent() call.
            m_bUserEditedName = False

        End Sub

        Public Sub New(newDEM As DEMSurvey, oldDEM As DEMSurvey)

            ' This call is required by the designer.
            InitializeComponent()

            ' Add any initialization after the InitializeComponent() call.
            'm_pArcMap = pArcMap
            m_bUserEditedName = False

            m_InitialNewDEM = newDEM
            m_InitialOldDEM = oldDEM

        End Sub

        Private Sub DoDPropertiesForm_Load(sender As Object, e As System.EventArgs) Handles Me.Load

            cboNewDEM.DataSource = ProjectManager.Project.DEMsSortByName(False)
            cboOldDEM.DataSource = ProjectManager.Project.DEMsSortByName(False)

            If m_InitialNewDEM Is Nothing Then
                ' There's no initial DEM so simply pick the first one
                If cboNewDEM.Items.Count > 0 Then
                    cboNewDEM.SelectedIndex = 0
                End If
            Else
                cboNewDEM.SelectedItem = m_InitialNewDEM
            End If

            If m_InitialOldDEM Is Nothing Then
                ' There's no initial DEM so simply pick the SECOND dem (i.e. different than the new DEM abovE)
                If cboOldDEM.Items.Count > 1 Then
                    cboOldDEM.SelectedIndex = 1
                End If
            Else
                cboOldDEM.SelectedItem = m_InitialOldDEM
            End If

            EnableDisableControls()

            lblMinLodThreshold.Text = String.Format("Threshold ({0})", UnitsNet.Length.GetAbbreviation(ProjectManager.Project.Units.VertUnit))

            If cboNewDEM.Items.Count > 0 AndAlso cboNewDEM.SelectedIndex < 0 Then
                cboNewDEM.SelectedIndex = 0
            End If

            UpdateAnalysisName()

        End Sub

        Private Sub cmdOK_Click(sender As System.Object, e As System.EventArgs) Handles cmdOK.Click

            If Not ValidateForm() Then
                Me.DialogResult = System.Windows.Forms.DialogResult.None
                Exit Sub
            End If

            Try
                Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

                Dim dFolder As New IO.DirectoryInfo(txtOutputFolder.Text)
                Dim cdEngine As GCDCore.Engines.ChangeDetectionEngineBase = Nothing

                If rdoMinLOD.Checked Then
                    cdEngine = New GCDCore.Engines.ChangeDetectionEngineMinLoD(txtName.Text, dFolder, cboNewDEM.SelectedItem, cboOldDEM.SelectedItem, valMinLodThreshold.Value)

                ElseIf rdoPropagated.Checked Then
                    cdEngine = New GCDCore.Engines.ChangeDetectionEnginePropProb(txtName.Text, dFolder, cboNewDEM.SelectedItem, cboOldDEM.SelectedItem,
                                                                                     cboNewError.SelectedItem, cboOldError.SelectedItem)
                Else
                    Dim spatCoherence As CoherenceProperties = Nothing
                    If chkBayesian.Checked Then
                        spatCoherence = New CoherenceProperties(m_frmSpatialCoherence.FilterSize, m_frmSpatialCoherence.PercentLess, m_frmSpatialCoherence.PercentGreater)
                    End If

                    cdEngine = New GCDCore.Engines.ChangeDetectionEngineProbabilistic(txtName.Text, dFolder, cboNewDEM.SelectedItem, cboOldDEM.SelectedItem,
                                                                                 cboNewError.SelectedItem, cboOldError.SelectedItem, Convert.ToDouble(valConfidence.Value), spatCoherence)

                End If

                m_DoD = cdEngine.Calculate(True, ProjectManager.Project.CellArea, ProjectManager.Project.Units)

                ProjectManager.Project.DoDs(txtName.Name) = m_DoD
                ProjectManager.Project.Save()

            Catch ex As Exception
                naru.error.ExceptionUI.HandleException(ex)
                m_DoD = Nothing
            Finally
                Cursor.Current = Cursors.Default
            End Try

        End Sub

        Private Function ValidateForm() As Boolean

            ' Safety step to prevent names with just spaces or difficult to detect trailing spaces
            txtName.Text = txtName.Text.Trim

            If String.IsNullOrEmpty(txtName.Text) OrElse String.IsNullOrEmpty(txtName.Text.Trim) Then
                MsgBox("Please enter a name for the analysis.", MsgBoxStyle.Information, GCDCore.Properties.Resources.ApplicationNameLong)
                Return False
            End If

            If IO.Directory.Exists(txtOutputFolder.Text) Then
                MsgBox("An analysis folder with the same output path already exists. Please change the analysis name so that a different output folder will be used.", MsgBoxStyle.Information, GCDCore.Properties.Resources.ApplicationNameLong)
                Return False
            End If

            If Not ProjectManager.Project.IsDoDNameUnique(txtName.Text, Nothing) Then
                MsgBox("A change detection already exists with this name. Please choose a unique name.", MsgBoxStyle.Information, GCDCore.Properties.Resources.ApplicationNameLong)
                Return False
            End If

            If TypeOf cboNewDEM.SelectedItem Is DEMSurvey Then
                If TypeOf cboOldDEM.SelectedItem Is DEMSurvey Then
                    If cboNewDEM.SelectedItem Is cboOldDEM.SelectedItem Then
                        MsgBox("Please choose two different DEM Surveys.", MsgBoxStyle.Information, GCDCore.Properties.Resources.ApplicationNameLong)
                        Return False
                    End If
                Else
                    MsgBox("Please select an Old DEM Survey.", MsgBoxStyle.Information, GCDCore.Properties.Resources.ApplicationNameLong)
                    Return False
                End If
            Else
                MsgBox("Please select a New DEM Survey.", MsgBoxStyle.Information, GCDCore.Properties.Resources.ApplicationNameLong)
                Return False
            End If

            If Not rdoMinLOD.Checked Then
                If Not TypeOf cboNewError.SelectedItem Is naru.db.NamedObject Then
                    MsgBox("Please select a new error surface.", MsgBoxStyle.Information, GCDCore.Properties.Resources.ApplicationNameLong)
                    Return False
                End If

                If Not TypeOf cboOldError.SelectedItem Is naru.db.NamedObject Then
                    MsgBox("Please select an old error surface.", MsgBoxStyle.Information, GCDCore.Properties.Resources.ApplicationNameLong)
                    Return False
                End If
            End If

            Return True

        End Function

        Private Sub rdoProbabilistic_CheckedChanged(sender As Object, e As System.EventArgs) Handles _
        rdoMinLOD.CheckedChanged,
        rdoPropagated.CheckedChanged,
        rdoProbabilistic.CheckedChanged

            EnableDisableControls()
            UpdateAnalysisName()

        End Sub

        Private Sub EnableDisableControls()

            lblNewError.Enabled = Not rdoMinLOD.Checked
            cboNewError.Enabled = Not rdoMinLOD.Checked
            lblOldError.Enabled = Not rdoMinLOD.Checked
            cboOldError.Enabled = Not rdoMinLOD.Checked

            valMinLodThreshold.Enabled = rdoMinLOD.Checked
            lblMinLodThreshold.Enabled = rdoMinLOD.Checked

            lblConfidence.Enabled = rdoProbabilistic.Checked
            valConfidence.Enabled = rdoProbabilistic.Checked
            chkBayesian.Enabled = rdoProbabilistic.Checked
            cmdBayesianProperties.Enabled = rdoProbabilistic.Checked AndAlso chkBayesian.Checked

        End Sub

#Region "DEM Selection Changed"

        Private Sub cboNewDEM_SelectedIndexChanged(sender As Object, e As System.EventArgs) Handles cboNewDEM.SelectedIndexChanged

            If TypeOf cboNewDEM.SelectedItem Is DEMSurvey Then
                cboNewError.DataSource = DirectCast(cboNewDEM.SelectedItem, DEMSurvey).ErrorSurfaces.Values.ToList()

                If cboNewError.Items.Count = 1 Then
                    cboNewError.SelectedIndex = 0
                End If
            End If

            UpdateAnalysisName()

        End Sub

        Private Sub cboOldDEM_SelectedIndexChanged(sender As Object, e As System.EventArgs) Handles cboOldDEM.SelectedIndexChanged

            If TypeOf cboOldDEM.SelectedItem Is DEMSurvey Then
                cboOldError.DataSource = DirectCast(cboOldDEM.SelectedItem, DEMSurvey).ErrorSurfaces.Values.ToList()

                If cboOldError.Items.Count = 1 Then
                    cboOldError.SelectedIndex = 0
                End If
            End If

            UpdateAnalysisName()

        End Sub

        Private Sub UpdateAnalysisName()

            If m_bUserEditedName Then
                Exit Sub
            End If

            Dim sAnalysisName As String = naru.os.File.RemoveDangerousCharacters(cboNewDEM.Text)
            If Not String.IsNullOrEmpty(sAnalysisName) Then
                sAnalysisName &= "_"
            End If

            If Not String.IsNullOrEmpty(cboOldDEM.Text) Then
                sAnalysisName &= naru.os.File.RemoveDangerousCharacters(cboOldDEM.Text)
            End If

            If rdoMinLOD.Checked Then
                sAnalysisName &= " MinLoD " & valMinLodThreshold.Value.ToString("#0.00")
            ElseIf rdoPropagated.Checked Then
                sAnalysisName &= " Prop"
            Else
                sAnalysisName &= " Prob " & valConfidence.Value.ToString("#0.00")
            End If

            txtName.Text = sAnalysisName.Trim()

        End Sub

#End Region

        Private Sub rdoCommonArea_CheckedChanged(sender As Object, e As System.EventArgs)

            EnableDisableControls()

        End Sub

        Private Sub txtName_KeyDown(sender As Object, e As System.Windows.Forms.KeyEventArgs) Handles txtName.KeyDown
            m_bUserEditedName = True
        End Sub

        Private Sub txtName_TextChanged(sender As Object, e As System.EventArgs) Handles txtName.TextChanged

            Try
                If String.IsNullOrEmpty(txtName.Text) Then
                    txtOutputFolder.Text = String.Empty
                Else
                    txtOutputFolder.Text = ProjectManager.OutputManager.GetDoDOutputFolder(txtName.Text)
                End If
            Catch ex As Exception

            End Try

        End Sub

        Private Sub cmdBayesianProperties_Click(sender As System.Object, e As System.EventArgs) Handles cmdBayesianProperties.Click

            m_frmSpatialCoherence.ShowDialog()

        End Sub

        Private Sub chkBayesian_CheckedChanged(sender As Object, e As System.EventArgs) Handles chkBayesian.CheckedChanged
            EnableDisableControls()
        End Sub

        Private Sub valConfidence_ValueChanged(sender As Object, e As System.EventArgs) Handles _
        valConfidence.ValueChanged,
        valMinLodThreshold.ValueChanged

            UpdateAnalysisName()
        End Sub

        Private Sub cmdHelp_Click(sender As System.Object, e As System.EventArgs) Handles cmdHelp.Click
            Process.Start(GCDCore.Properties.Resources.HelpBaseURL & "gcd-command-reference/gcd-project-explorer/j-change-detection-context-menu/i-add-change-detection")
        End Sub
    End Class

End Namespace