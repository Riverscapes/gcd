//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GCDCore.Project {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ProjectDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ProjectDS : global::System.Data.DataSet {
        
        private ProjectDataTable tableProject;
        
        private DEMSurveyDataTable tableDEMSurvey;
        
        private AssociatedSurfaceDataTable tableAssociatedSurface;
        
        private ErrorSurfaceDataTable tableErrorSurface;
        
        private MultiErrorPropertiesDataTable tableMultiErrorProperties;
        
        private FISInputsDataTable tableFISInputs;
        
        private DoDsDataTable tableDoDs;
        
        private BudgetSegregationsDataTable tableBudgetSegregations;
        
        private BSMasksDataTable tableBSMasks;
        
        private AOIsDataTable tableAOIs;
        
        private WaterSurfacesDataTable tableWaterSurfaces;
        
        private ReservoirAnalysisDataTable tableReservoirAnalysis;
        
        private ReservoirDataTable tableReservoir;
        
        private global::System.Data.DataRelation relationFK_Project_DEMSurvey;
        
        private global::System.Data.DataRelation relationFK_DEMSurvey_AssociatedSurface;
        
        private global::System.Data.DataRelation relationDEMSurvey_ErrorTable;
        
        private global::System.Data.DataRelation relationErrorTable_MultiErrorProperties;
        
        private global::System.Data.DataRelation relationFK_ErrorTable_FISInputs;
        
        private global::System.Data.DataRelation relationFK_Project_DoDTable;
        
        private global::System.Data.DataRelation relationFK_DoDs_BudgetSegregations;
        
        private global::System.Data.DataRelation relationFK_BudgetSegregations_BSMasks;
        
        private global::System.Data.DataRelation relationFK_Project_AOIs;
        
        private global::System.Data.DataRelation relationWaterSurfaces_Reservoir;
        
        private global::System.Data.DataRelation relationFK_DEMSurvey_Reservoir;
        
        private global::System.Data.DataRelation relationFK_ErrorTable_Reservoir;
        
        private global::System.Data.DataRelation relationFK_ReservoirAnalysis_Reservoir;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ProjectDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ProjectDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Project"] != null)) {
                    base.Tables.Add(new ProjectDataTable(ds.Tables["Project"]));
                }
                if ((ds.Tables["DEMSurvey"] != null)) {
                    base.Tables.Add(new DEMSurveyDataTable(ds.Tables["DEMSurvey"]));
                }
                if ((ds.Tables["AssociatedSurface"] != null)) {
                    base.Tables.Add(new AssociatedSurfaceDataTable(ds.Tables["AssociatedSurface"]));
                }
                if ((ds.Tables["ErrorSurface"] != null)) {
                    base.Tables.Add(new ErrorSurfaceDataTable(ds.Tables["ErrorSurface"]));
                }
                if ((ds.Tables["MultiErrorProperties"] != null)) {
                    base.Tables.Add(new MultiErrorPropertiesDataTable(ds.Tables["MultiErrorProperties"]));
                }
                if ((ds.Tables["FISInputs"] != null)) {
                    base.Tables.Add(new FISInputsDataTable(ds.Tables["FISInputs"]));
                }
                if ((ds.Tables["DoDs"] != null)) {
                    base.Tables.Add(new DoDsDataTable(ds.Tables["DoDs"]));
                }
                if ((ds.Tables["BudgetSegregations"] != null)) {
                    base.Tables.Add(new BudgetSegregationsDataTable(ds.Tables["BudgetSegregations"]));
                }
                if ((ds.Tables["BSMasks"] != null)) {
                    base.Tables.Add(new BSMasksDataTable(ds.Tables["BSMasks"]));
                }
                if ((ds.Tables["AOIs"] != null)) {
                    base.Tables.Add(new AOIsDataTable(ds.Tables["AOIs"]));
                }
                if ((ds.Tables["WaterSurfaces"] != null)) {
                    base.Tables.Add(new WaterSurfacesDataTable(ds.Tables["WaterSurfaces"]));
                }
                if ((ds.Tables["ReservoirAnalysis"] != null)) {
                    base.Tables.Add(new ReservoirAnalysisDataTable(ds.Tables["ReservoirAnalysis"]));
                }
                if ((ds.Tables["Reservoir"] != null)) {
                    base.Tables.Add(new ReservoirDataTable(ds.Tables["Reservoir"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProjectDataTable Project {
            get {
                return this.tableProject;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DEMSurveyDataTable DEMSurvey {
            get {
                return this.tableDEMSurvey;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AssociatedSurfaceDataTable AssociatedSurface {
            get {
                return this.tableAssociatedSurface;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ErrorSurfaceDataTable ErrorSurface {
            get {
                return this.tableErrorSurface;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MultiErrorPropertiesDataTable MultiErrorProperties {
            get {
                return this.tableMultiErrorProperties;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FISInputsDataTable FISInputs {
            get {
                return this.tableFISInputs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DoDsDataTable DoDs {
            get {
                return this.tableDoDs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BudgetSegregationsDataTable BudgetSegregations {
            get {
                return this.tableBudgetSegregations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BSMasksDataTable BSMasks {
            get {
                return this.tableBSMasks;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AOIsDataTable AOIs {
            get {
                return this.tableAOIs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WaterSurfacesDataTable WaterSurfaces {
            get {
                return this.tableWaterSurfaces;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReservoirAnalysisDataTable ReservoirAnalysis {
            get {
                return this.tableReservoirAnalysis;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReservoirDataTable Reservoir {
            get {
                return this.tableReservoir;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ProjectDS cln = ((ProjectDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Project"] != null)) {
                    base.Tables.Add(new ProjectDataTable(ds.Tables["Project"]));
                }
                if ((ds.Tables["DEMSurvey"] != null)) {
                    base.Tables.Add(new DEMSurveyDataTable(ds.Tables["DEMSurvey"]));
                }
                if ((ds.Tables["AssociatedSurface"] != null)) {
                    base.Tables.Add(new AssociatedSurfaceDataTable(ds.Tables["AssociatedSurface"]));
                }
                if ((ds.Tables["ErrorSurface"] != null)) {
                    base.Tables.Add(new ErrorSurfaceDataTable(ds.Tables["ErrorSurface"]));
                }
                if ((ds.Tables["MultiErrorProperties"] != null)) {
                    base.Tables.Add(new MultiErrorPropertiesDataTable(ds.Tables["MultiErrorProperties"]));
                }
                if ((ds.Tables["FISInputs"] != null)) {
                    base.Tables.Add(new FISInputsDataTable(ds.Tables["FISInputs"]));
                }
                if ((ds.Tables["DoDs"] != null)) {
                    base.Tables.Add(new DoDsDataTable(ds.Tables["DoDs"]));
                }
                if ((ds.Tables["BudgetSegregations"] != null)) {
                    base.Tables.Add(new BudgetSegregationsDataTable(ds.Tables["BudgetSegregations"]));
                }
                if ((ds.Tables["BSMasks"] != null)) {
                    base.Tables.Add(new BSMasksDataTable(ds.Tables["BSMasks"]));
                }
                if ((ds.Tables["AOIs"] != null)) {
                    base.Tables.Add(new AOIsDataTable(ds.Tables["AOIs"]));
                }
                if ((ds.Tables["WaterSurfaces"] != null)) {
                    base.Tables.Add(new WaterSurfacesDataTable(ds.Tables["WaterSurfaces"]));
                }
                if ((ds.Tables["ReservoirAnalysis"] != null)) {
                    base.Tables.Add(new ReservoirAnalysisDataTable(ds.Tables["ReservoirAnalysis"]));
                }
                if ((ds.Tables["Reservoir"] != null)) {
                    base.Tables.Add(new ReservoirDataTable(ds.Tables["Reservoir"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableProject = ((ProjectDataTable)(base.Tables["Project"]));
            if ((initTable == true)) {
                if ((this.tableProject != null)) {
                    this.tableProject.InitVars();
                }
            }
            this.tableDEMSurvey = ((DEMSurveyDataTable)(base.Tables["DEMSurvey"]));
            if ((initTable == true)) {
                if ((this.tableDEMSurvey != null)) {
                    this.tableDEMSurvey.InitVars();
                }
            }
            this.tableAssociatedSurface = ((AssociatedSurfaceDataTable)(base.Tables["AssociatedSurface"]));
            if ((initTable == true)) {
                if ((this.tableAssociatedSurface != null)) {
                    this.tableAssociatedSurface.InitVars();
                }
            }
            this.tableErrorSurface = ((ErrorSurfaceDataTable)(base.Tables["ErrorSurface"]));
            if ((initTable == true)) {
                if ((this.tableErrorSurface != null)) {
                    this.tableErrorSurface.InitVars();
                }
            }
            this.tableMultiErrorProperties = ((MultiErrorPropertiesDataTable)(base.Tables["MultiErrorProperties"]));
            if ((initTable == true)) {
                if ((this.tableMultiErrorProperties != null)) {
                    this.tableMultiErrorProperties.InitVars();
                }
            }
            this.tableFISInputs = ((FISInputsDataTable)(base.Tables["FISInputs"]));
            if ((initTable == true)) {
                if ((this.tableFISInputs != null)) {
                    this.tableFISInputs.InitVars();
                }
            }
            this.tableDoDs = ((DoDsDataTable)(base.Tables["DoDs"]));
            if ((initTable == true)) {
                if ((this.tableDoDs != null)) {
                    this.tableDoDs.InitVars();
                }
            }
            this.tableBudgetSegregations = ((BudgetSegregationsDataTable)(base.Tables["BudgetSegregations"]));
            if ((initTable == true)) {
                if ((this.tableBudgetSegregations != null)) {
                    this.tableBudgetSegregations.InitVars();
                }
            }
            this.tableBSMasks = ((BSMasksDataTable)(base.Tables["BSMasks"]));
            if ((initTable == true)) {
                if ((this.tableBSMasks != null)) {
                    this.tableBSMasks.InitVars();
                }
            }
            this.tableAOIs = ((AOIsDataTable)(base.Tables["AOIs"]));
            if ((initTable == true)) {
                if ((this.tableAOIs != null)) {
                    this.tableAOIs.InitVars();
                }
            }
            this.tableWaterSurfaces = ((WaterSurfacesDataTable)(base.Tables["WaterSurfaces"]));
            if ((initTable == true)) {
                if ((this.tableWaterSurfaces != null)) {
                    this.tableWaterSurfaces.InitVars();
                }
            }
            this.tableReservoirAnalysis = ((ReservoirAnalysisDataTable)(base.Tables["ReservoirAnalysis"]));
            if ((initTable == true)) {
                if ((this.tableReservoirAnalysis != null)) {
                    this.tableReservoirAnalysis.InitVars();
                }
            }
            this.tableReservoir = ((ReservoirDataTable)(base.Tables["Reservoir"]));
            if ((initTable == true)) {
                if ((this.tableReservoir != null)) {
                    this.tableReservoir.InitVars();
                }
            }
            this.relationFK_Project_DEMSurvey = this.Relations["FK_Project_DEMSurvey"];
            this.relationFK_DEMSurvey_AssociatedSurface = this.Relations["FK_DEMSurvey_AssociatedSurface"];
            this.relationDEMSurvey_ErrorTable = this.Relations["DEMSurvey_ErrorTable"];
            this.relationErrorTable_MultiErrorProperties = this.Relations["ErrorTable_MultiErrorProperties"];
            this.relationFK_ErrorTable_FISInputs = this.Relations["FK_ErrorTable_FISInputs"];
            this.relationFK_Project_DoDTable = this.Relations["FK_Project_DoDTable"];
            this.relationFK_DoDs_BudgetSegregations = this.Relations["FK_DoDs_BudgetSegregations"];
            this.relationFK_BudgetSegregations_BSMasks = this.Relations["FK_BudgetSegregations_BSMasks"];
            this.relationFK_Project_AOIs = this.Relations["FK_Project_AOIs"];
            this.relationWaterSurfaces_Reservoir = this.Relations["WaterSurfaces_Reservoir"];
            this.relationFK_DEMSurvey_Reservoir = this.Relations["FK_DEMSurvey_Reservoir"];
            this.relationFK_ErrorTable_Reservoir = this.Relations["FK_ErrorTable_Reservoir"];
            this.relationFK_ReservoirAnalysis_Reservoir = this.Relations["FK_ReservoirAnalysis_Reservoir"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ProjectDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ProjectDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableProject = new ProjectDataTable();
            base.Tables.Add(this.tableProject);
            this.tableDEMSurvey = new DEMSurveyDataTable();
            base.Tables.Add(this.tableDEMSurvey);
            this.tableAssociatedSurface = new AssociatedSurfaceDataTable();
            base.Tables.Add(this.tableAssociatedSurface);
            this.tableErrorSurface = new ErrorSurfaceDataTable();
            base.Tables.Add(this.tableErrorSurface);
            this.tableMultiErrorProperties = new MultiErrorPropertiesDataTable();
            base.Tables.Add(this.tableMultiErrorProperties);
            this.tableFISInputs = new FISInputsDataTable();
            base.Tables.Add(this.tableFISInputs);
            this.tableDoDs = new DoDsDataTable();
            base.Tables.Add(this.tableDoDs);
            this.tableBudgetSegregations = new BudgetSegregationsDataTable();
            base.Tables.Add(this.tableBudgetSegregations);
            this.tableBSMasks = new BSMasksDataTable();
            base.Tables.Add(this.tableBSMasks);
            this.tableAOIs = new AOIsDataTable();
            base.Tables.Add(this.tableAOIs);
            this.tableWaterSurfaces = new WaterSurfacesDataTable();
            base.Tables.Add(this.tableWaterSurfaces);
            this.tableReservoirAnalysis = new ReservoirAnalysisDataTable();
            base.Tables.Add(this.tableReservoirAnalysis);
            this.tableReservoir = new ReservoirDataTable();
            base.Tables.Add(this.tableReservoir);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Project_DEMSurvey", new global::System.Data.DataColumn[] {
                        this.tableProject.ProjectIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableDEMSurvey.ProjectIDColumn});
            this.tableDEMSurvey.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.None;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_DEMSurvey_AssociatedSurface", new global::System.Data.DataColumn[] {
                        this.tableDEMSurvey.DEMSurveyIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableAssociatedSurface.DEMSurveyIDColumn});
            this.tableAssociatedSurface.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.None;
            fkc = new global::System.Data.ForeignKeyConstraint("DEMSurvey_ErrorTable", new global::System.Data.DataColumn[] {
                        this.tableDEMSurvey.DEMSurveyIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableErrorSurface.DEMSurveyIDColumn});
            this.tableErrorSurface.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.None;
            fkc = new global::System.Data.ForeignKeyConstraint("ErrorTable_MultiErrorProperties", new global::System.Data.DataColumn[] {
                        this.tableErrorSurface.ErrorSurfaceIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableMultiErrorProperties.ErrorIDColumn});
            this.tableMultiErrorProperties.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.None;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_ErrorTable_FISInputs", new global::System.Data.DataColumn[] {
                        this.tableErrorSurface.ErrorSurfaceIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFISInputs.ErrorIDColumn});
            this.tableFISInputs.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Project_DoDTable", new global::System.Data.DataColumn[] {
                        this.tableProject.ProjectIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableDoDs.ProjectIDColumn});
            this.tableDoDs.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_DoDs_BudgetSegregations", new global::System.Data.DataColumn[] {
                        this.tableDoDs.DoDIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableBudgetSegregations.DoDIDColumn});
            this.tableBudgetSegregations.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_BudgetSegregations_BSMasks", new global::System.Data.DataColumn[] {
                        this.tableBudgetSegregations.BudgetIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableBSMasks.BudgetIDColumn});
            this.tableBSMasks.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Project_AOIs", new global::System.Data.DataColumn[] {
                        this.tableProject.ProjectIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableAOIs.ProjectIDColumn});
            this.tableAOIs.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("WaterSurfaces_Reservoir", new global::System.Data.DataColumn[] {
                        this.tableWaterSurfaces.WaterSurfaceIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableReservoirAnalysis.WaterSurfaceIDColumn});
            this.tableReservoirAnalysis.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_DEMSurvey_Reservoir", new global::System.Data.DataColumn[] {
                        this.tableDEMSurvey.DEMSurveyIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableReservoirAnalysis.DEMSurveyIDColumn});
            this.tableReservoirAnalysis.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_ErrorTable_Reservoir", new global::System.Data.DataColumn[] {
                        this.tableErrorSurface.ErrorSurfaceIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableReservoirAnalysis.ErrorIDColumn});
            this.tableReservoirAnalysis.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_ReservoirAnalysis_Reservoir", new global::System.Data.DataColumn[] {
                        this.tableReservoirAnalysis.ReservoirAnalysisIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableReservoir.ReservoirAnalysisIDColumn});
            this.tableReservoir.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationFK_Project_DEMSurvey = new global::System.Data.DataRelation("FK_Project_DEMSurvey", new global::System.Data.DataColumn[] {
                        this.tableProject.ProjectIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableDEMSurvey.ProjectIDColumn}, false);
            this.relationFK_Project_DEMSurvey.Nested = true;
            this.Relations.Add(this.relationFK_Project_DEMSurvey);
            this.relationFK_DEMSurvey_AssociatedSurface = new global::System.Data.DataRelation("FK_DEMSurvey_AssociatedSurface", new global::System.Data.DataColumn[] {
                        this.tableDEMSurvey.DEMSurveyIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableAssociatedSurface.DEMSurveyIDColumn}, false);
            this.relationFK_DEMSurvey_AssociatedSurface.Nested = true;
            this.Relations.Add(this.relationFK_DEMSurvey_AssociatedSurface);
            this.relationDEMSurvey_ErrorTable = new global::System.Data.DataRelation("DEMSurvey_ErrorTable", new global::System.Data.DataColumn[] {
                        this.tableDEMSurvey.DEMSurveyIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableErrorSurface.DEMSurveyIDColumn}, false);
            this.relationDEMSurvey_ErrorTable.Nested = true;
            this.Relations.Add(this.relationDEMSurvey_ErrorTable);
            this.relationErrorTable_MultiErrorProperties = new global::System.Data.DataRelation("ErrorTable_MultiErrorProperties", new global::System.Data.DataColumn[] {
                        this.tableErrorSurface.ErrorSurfaceIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableMultiErrorProperties.ErrorIDColumn}, false);
            this.relationErrorTable_MultiErrorProperties.Nested = true;
            this.Relations.Add(this.relationErrorTable_MultiErrorProperties);
            this.relationFK_ErrorTable_FISInputs = new global::System.Data.DataRelation("FK_ErrorTable_FISInputs", new global::System.Data.DataColumn[] {
                        this.tableErrorSurface.ErrorSurfaceIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFISInputs.ErrorIDColumn}, false);
            this.relationFK_ErrorTable_FISInputs.Nested = true;
            this.Relations.Add(this.relationFK_ErrorTable_FISInputs);
            this.relationFK_Project_DoDTable = new global::System.Data.DataRelation("FK_Project_DoDTable", new global::System.Data.DataColumn[] {
                        this.tableProject.ProjectIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableDoDs.ProjectIDColumn}, false);
            this.relationFK_Project_DoDTable.Nested = true;
            this.Relations.Add(this.relationFK_Project_DoDTable);
            this.relationFK_DoDs_BudgetSegregations = new global::System.Data.DataRelation("FK_DoDs_BudgetSegregations", new global::System.Data.DataColumn[] {
                        this.tableDoDs.DoDIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableBudgetSegregations.DoDIDColumn}, false);
            this.relationFK_DoDs_BudgetSegregations.Nested = true;
            this.Relations.Add(this.relationFK_DoDs_BudgetSegregations);
            this.relationFK_BudgetSegregations_BSMasks = new global::System.Data.DataRelation("FK_BudgetSegregations_BSMasks", new global::System.Data.DataColumn[] {
                        this.tableBudgetSegregations.BudgetIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableBSMasks.BudgetIDColumn}, false);
            this.relationFK_BudgetSegregations_BSMasks.Nested = true;
            this.Relations.Add(this.relationFK_BudgetSegregations_BSMasks);
            this.relationFK_Project_AOIs = new global::System.Data.DataRelation("FK_Project_AOIs", new global::System.Data.DataColumn[] {
                        this.tableProject.ProjectIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableAOIs.ProjectIDColumn}, false);
            this.relationFK_Project_AOIs.Nested = true;
            this.Relations.Add(this.relationFK_Project_AOIs);
            this.relationWaterSurfaces_Reservoir = new global::System.Data.DataRelation("WaterSurfaces_Reservoir", new global::System.Data.DataColumn[] {
                        this.tableWaterSurfaces.WaterSurfaceIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableReservoirAnalysis.WaterSurfaceIDColumn}, false);
            this.Relations.Add(this.relationWaterSurfaces_Reservoir);
            this.relationFK_DEMSurvey_Reservoir = new global::System.Data.DataRelation("FK_DEMSurvey_Reservoir", new global::System.Data.DataColumn[] {
                        this.tableDEMSurvey.DEMSurveyIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableReservoirAnalysis.DEMSurveyIDColumn}, false);
            this.Relations.Add(this.relationFK_DEMSurvey_Reservoir);
            this.relationFK_ErrorTable_Reservoir = new global::System.Data.DataRelation("FK_ErrorTable_Reservoir", new global::System.Data.DataColumn[] {
                        this.tableErrorSurface.ErrorSurfaceIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableReservoirAnalysis.ErrorIDColumn}, false);
            this.Relations.Add(this.relationFK_ErrorTable_Reservoir);
            this.relationFK_ReservoirAnalysis_Reservoir = new global::System.Data.DataRelation("FK_ReservoirAnalysis_Reservoir", new global::System.Data.DataColumn[] {
                        this.tableReservoirAnalysis.ReservoirAnalysisIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableReservoir.ReservoirAnalysisIDColumn}, false);
            this.Relations.Add(this.relationFK_ReservoirAnalysis_Reservoir);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProject() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDEMSurvey() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAssociatedSurface() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeErrorSurface() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMultiErrorProperties() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFISInputs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDoDs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBudgetSegregations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBSMasks() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAOIs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeWaterSurfaces() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeReservoirAnalysis() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeReservoir() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ProjectDS ds = new ProjectDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProjectRowChangeEventHandler(object sender, ProjectRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DEMSurveyRowChangeEventHandler(object sender, DEMSurveyRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AssociatedSurfaceRowChangeEventHandler(object sender, AssociatedSurfaceRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ErrorSurfaceRowChangeEventHandler(object sender, ErrorSurfaceRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MultiErrorPropertiesRowChangeEventHandler(object sender, MultiErrorPropertiesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FISInputsRowChangeEventHandler(object sender, FISInputsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DoDsRowChangeEventHandler(object sender, DoDsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BudgetSegregationsRowChangeEventHandler(object sender, BudgetSegregationsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BSMasksRowChangeEventHandler(object sender, BSMasksRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AOIsRowChangeEventHandler(object sender, AOIsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void WaterSurfacesRowChangeEventHandler(object sender, WaterSurfacesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ReservoirAnalysisRowChangeEventHandler(object sender, ReservoirAnalysisRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ReservoirRowChangeEventHandler(object sender, ReservoirRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProjectDataTable : global::System.Data.TypedTableBase<ProjectRow> {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnOutputDirectory;
            
            private global::System.Data.DataColumn columnDateCreated;
            
            private global::System.Data.DataColumn columnGCDVersion;
            
            private global::System.Data.DataColumn columnPrecision;
            
            private global::System.Data.DataColumn columnDisplayUnits;
            
            private global::System.Data.DataColumn columnCoordinateSystem;
            
            private global::System.Data.DataColumn columnProjectType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectDataTable() {
                this.TableName = "Project";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProjectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProjectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutputDirectoryColumn {
                get {
                    return this.columnOutputDirectory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GCDVersionColumn {
                get {
                    return this.columnGCDVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrecisionColumn {
                get {
                    return this.columnPrecision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DisplayUnitsColumn {
                get {
                    return this.columnDisplayUnits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoordinateSystemColumn {
                get {
                    return this.columnCoordinateSystem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectTypeColumn {
                get {
                    return this.columnProjectType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectRow this[int index] {
                get {
                    return ((ProjectRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProjectRowChangeEventHandler ProjectRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProjectRowChangeEventHandler ProjectRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProjectRowChangeEventHandler ProjectRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProjectRowChangeEventHandler ProjectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProjectRow(ProjectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectRow AddProjectRow(string Name, string Description, string OutputDirectory, System.DateTime DateCreated, string GCDVersion, double Precision, string DisplayUnits, string CoordinateSystem, string ProjectType) {
                ProjectRow rowProjectRow = ((ProjectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Name,
                        Description,
                        OutputDirectory,
                        DateCreated,
                        GCDVersion,
                        Precision,
                        DisplayUnits,
                        CoordinateSystem,
                        ProjectType};
                rowProjectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProjectRow);
                return rowProjectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProjectDataTable cln = ((ProjectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProjectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnName = base.Columns["Name"];
                this.columnDescription = base.Columns["Description"];
                this.columnOutputDirectory = base.Columns["OutputDirectory"];
                this.columnDateCreated = base.Columns["DateCreated"];
                this.columnGCDVersion = base.Columns["GCDVersion"];
                this.columnPrecision = base.Columns["Precision"];
                this.columnDisplayUnits = base.Columns["DisplayUnits"];
                this.columnCoordinateSystem = base.Columns["CoordinateSystem"];
                this.columnProjectType = base.Columns["ProjectType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnOutputDirectory = new global::System.Data.DataColumn("OutputDirectory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutputDirectory);
                this.columnDateCreated = new global::System.Data.DataColumn("DateCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreated);
                this.columnGCDVersion = new global::System.Data.DataColumn("GCDVersion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGCDVersion);
                this.columnPrecision = new global::System.Data.DataColumn("Precision", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecision);
                this.columnDisplayUnits = new global::System.Data.DataColumn("DisplayUnits", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayUnits);
                this.columnCoordinateSystem = new global::System.Data.DataColumn("CoordinateSystem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoordinateSystem);
                this.columnProjectType = new global::System.Data.DataColumn("ProjectType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnName}, false));
                this.columnProjectID.AutoIncrement = true;
                this.columnProjectID.AutoIncrementSeed = 1;
                this.columnProjectID.AllowDBNull = false;
                this.columnProjectID.ReadOnly = true;
                this.columnProjectID.Unique = true;
                this.columnName.AllowDBNull = false;
                this.columnName.Unique = true;
                this.columnOutputDirectory.AllowDBNull = false;
                this.columnOutputDirectory.MaxLength = 255;
                this.columnPrecision.AllowDBNull = false;
                this.columnPrecision.DefaultValue = ((double)(1D));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectRow NewProjectRow() {
                return ((ProjectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProjectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProjectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProjectRowChanged != null)) {
                    this.ProjectRowChanged(this, new ProjectRowChangeEvent(((ProjectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProjectRowChanging != null)) {
                    this.ProjectRowChanging(this, new ProjectRowChangeEvent(((ProjectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProjectRowDeleted != null)) {
                    this.ProjectRowDeleted(this, new ProjectRowChangeEvent(((ProjectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProjectRowDeleting != null)) {
                    this.ProjectRowDeleting(this, new ProjectRowChangeEvent(((ProjectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProjectRow(ProjectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectDS ds = new ProjectDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProjectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DEMSurveyDataTable : global::System.Data.TypedTableBase<DEMSurveyRow> {
            
            private global::System.Data.DataColumn columnDEMSurveyID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnSource;
            
            private global::System.Data.DataColumn columnSingleMethodType;
            
            private global::System.Data.DataColumn columnMethodMask;
            
            private global::System.Data.DataColumn columnSurveyDate;
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnSingleMethod;
            
            private global::System.Data.DataColumn columnMultiMethod;
            
            private global::System.Data.DataColumn columnMethodMaskField;
            
            private global::System.Data.DataColumn columnCellResolution;
            
            private global::System.Data.DataColumn columnExtentLeft;
            
            private global::System.Data.DataColumn columnExtentBottom;
            
            private global::System.Data.DataColumn columnExtentRight;
            
            private global::System.Data.DataColumn columnExtentTop;
            
            private global::System.Data.DataColumn columnOriginalExtentLeft;
            
            private global::System.Data.DataColumn columnOriginalExtentBottom;
            
            private global::System.Data.DataColumn columnOriginalExtentRight;
            
            private global::System.Data.DataColumn columnOriginalExtentTop;
            
            private global::System.Data.DataColumn columnOriginalSource;
            
            private global::System.Data.DataColumn columnOriginalComputer;
            
            private global::System.Data.DataColumn columnOriginalCellSize;
            
            private global::System.Data.DataColumn columnSurveyYear;
            
            private global::System.Data.DataColumn columnSurveyMonth;
            
            private global::System.Data.DataColumn columnSurveyDay;
            
            private global::System.Data.DataColumn columnSurveyHour;
            
            private global::System.Data.DataColumn columnSurveyMin;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEMSurveyDataTable() {
                this.TableName = "DEMSurvey";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DEMSurveyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DEMSurveyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEMSurveyIDColumn {
                get {
                    return this.columnDEMSurveyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SourceColumn {
                get {
                    return this.columnSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SingleMethodTypeColumn {
                get {
                    return this.columnSingleMethodType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MethodMaskColumn {
                get {
                    return this.columnMethodMask;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurveyDateColumn {
                get {
                    return this.columnSurveyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SingleMethodColumn {
                get {
                    return this.columnSingleMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MultiMethodColumn {
                get {
                    return this.columnMultiMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MethodMaskFieldColumn {
                get {
                    return this.columnMethodMaskField;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CellResolutionColumn {
                get {
                    return this.columnCellResolution;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtentLeftColumn {
                get {
                    return this.columnExtentLeft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtentBottomColumn {
                get {
                    return this.columnExtentBottom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtentRightColumn {
                get {
                    return this.columnExtentRight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtentTopColumn {
                get {
                    return this.columnExtentTop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalExtentLeftColumn {
                get {
                    return this.columnOriginalExtentLeft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalExtentBottomColumn {
                get {
                    return this.columnOriginalExtentBottom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalExtentRightColumn {
                get {
                    return this.columnOriginalExtentRight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalExtentTopColumn {
                get {
                    return this.columnOriginalExtentTop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalSourceColumn {
                get {
                    return this.columnOriginalSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalComputerColumn {
                get {
                    return this.columnOriginalComputer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalCellSizeColumn {
                get {
                    return this.columnOriginalCellSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurveyYearColumn {
                get {
                    return this.columnSurveyYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurveyMonthColumn {
                get {
                    return this.columnSurveyMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurveyDayColumn {
                get {
                    return this.columnSurveyDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurveyHourColumn {
                get {
                    return this.columnSurveyHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurveyMinColumn {
                get {
                    return this.columnSurveyMin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEMSurveyRow this[int index] {
                get {
                    return ((DEMSurveyRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEMSurveyRowChangeEventHandler DEMSurveyRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEMSurveyRowChangeEventHandler DEMSurveyRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEMSurveyRowChangeEventHandler DEMSurveyRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEMSurveyRowChangeEventHandler DEMSurveyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDEMSurveyRow(DEMSurveyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEMSurveyRow AddDEMSurveyRow(
                        string Name, 
                        string Source, 
                        string SingleMethodType, 
                        string MethodMask, 
                        string SurveyDate, 
                        ProjectRow parentProjectRowByFK_Project_DEMSurvey, 
                        bool SingleMethod, 
                        bool MultiMethod, 
                        string MethodMaskField, 
                        double CellResolution, 
                        double ExtentLeft, 
                        double ExtentBottom, 
                        double ExtentRight, 
                        double ExtentTop, 
                        double OriginalExtentLeft, 
                        double OriginalExtentBottom, 
                        double OriginalExtentRight, 
                        double OriginalExtentTop, 
                        string OriginalSource, 
                        string OriginalComputer, 
                        double OriginalCellSize, 
                        ushort SurveyYear, 
                        byte SurveyMonth, 
                        byte SurveyDay, 
                        byte SurveyHour, 
                        byte SurveyMin) {
                DEMSurveyRow rowDEMSurveyRow = ((DEMSurveyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Name,
                        Source,
                        SingleMethodType,
                        MethodMask,
                        SurveyDate,
                        null,
                        SingleMethod,
                        MultiMethod,
                        MethodMaskField,
                        CellResolution,
                        ExtentLeft,
                        ExtentBottom,
                        ExtentRight,
                        ExtentTop,
                        OriginalExtentLeft,
                        OriginalExtentBottom,
                        OriginalExtentRight,
                        OriginalExtentTop,
                        OriginalSource,
                        OriginalComputer,
                        OriginalCellSize,
                        SurveyYear,
                        SurveyMonth,
                        SurveyDay,
                        SurveyHour,
                        SurveyMin};
                if ((parentProjectRowByFK_Project_DEMSurvey != null)) {
                    columnValuesArray[6] = parentProjectRowByFK_Project_DEMSurvey[0];
                }
                rowDEMSurveyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDEMSurveyRow);
                return rowDEMSurveyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEMSurveyRow FindByDEMSurveyID(int DEMSurveyID) {
                return ((DEMSurveyRow)(this.Rows.Find(new object[] {
                            DEMSurveyID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DEMSurveyDataTable cln = ((DEMSurveyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DEMSurveyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnDEMSurveyID = base.Columns["DEMSurveyID"];
                this.columnName = base.Columns["Name"];
                this.columnSource = base.Columns["Source"];
                this.columnSingleMethodType = base.Columns["SingleMethodType"];
                this.columnMethodMask = base.Columns["MethodMask"];
                this.columnSurveyDate = base.Columns["SurveyDate"];
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnSingleMethod = base.Columns["SingleMethod"];
                this.columnMultiMethod = base.Columns["MultiMethod"];
                this.columnMethodMaskField = base.Columns["MethodMaskField"];
                this.columnCellResolution = base.Columns["CellResolution"];
                this.columnExtentLeft = base.Columns["ExtentLeft"];
                this.columnExtentBottom = base.Columns["ExtentBottom"];
                this.columnExtentRight = base.Columns["ExtentRight"];
                this.columnExtentTop = base.Columns["ExtentTop"];
                this.columnOriginalExtentLeft = base.Columns["OriginalExtentLeft"];
                this.columnOriginalExtentBottom = base.Columns["OriginalExtentBottom"];
                this.columnOriginalExtentRight = base.Columns["OriginalExtentRight"];
                this.columnOriginalExtentTop = base.Columns["OriginalExtentTop"];
                this.columnOriginalSource = base.Columns["OriginalSource"];
                this.columnOriginalComputer = base.Columns["OriginalComputer"];
                this.columnOriginalCellSize = base.Columns["OriginalCellSize"];
                this.columnSurveyYear = base.Columns["SurveyYear"];
                this.columnSurveyMonth = base.Columns["SurveyMonth"];
                this.columnSurveyDay = base.Columns["SurveyDay"];
                this.columnSurveyHour = base.Columns["SurveyHour"];
                this.columnSurveyMin = base.Columns["SurveyMin"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnDEMSurveyID = new global::System.Data.DataColumn("DEMSurveyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEMSurveyID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnSource = new global::System.Data.DataColumn("Source", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSource);
                this.columnSingleMethodType = new global::System.Data.DataColumn("SingleMethodType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSingleMethodType);
                this.columnMethodMask = new global::System.Data.DataColumn("MethodMask", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethodMask);
                this.columnSurveyDate = new global::System.Data.DataColumn("SurveyDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveyDate);
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnSingleMethod = new global::System.Data.DataColumn("SingleMethod", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSingleMethod);
                this.columnMultiMethod = new global::System.Data.DataColumn("MultiMethod", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMultiMethod);
                this.columnMethodMaskField = new global::System.Data.DataColumn("MethodMaskField", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethodMaskField);
                this.columnCellResolution = new global::System.Data.DataColumn("CellResolution", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCellResolution);
                this.columnExtentLeft = new global::System.Data.DataColumn("ExtentLeft", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtentLeft);
                this.columnExtentBottom = new global::System.Data.DataColumn("ExtentBottom", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtentBottom);
                this.columnExtentRight = new global::System.Data.DataColumn("ExtentRight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtentRight);
                this.columnExtentTop = new global::System.Data.DataColumn("ExtentTop", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtentTop);
                this.columnOriginalExtentLeft = new global::System.Data.DataColumn("OriginalExtentLeft", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalExtentLeft);
                this.columnOriginalExtentBottom = new global::System.Data.DataColumn("OriginalExtentBottom", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalExtentBottom);
                this.columnOriginalExtentRight = new global::System.Data.DataColumn("OriginalExtentRight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalExtentRight);
                this.columnOriginalExtentTop = new global::System.Data.DataColumn("OriginalExtentTop", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalExtentTop);
                this.columnOriginalSource = new global::System.Data.DataColumn("OriginalSource", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalSource);
                this.columnOriginalComputer = new global::System.Data.DataColumn("OriginalComputer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalComputer);
                this.columnOriginalCellSize = new global::System.Data.DataColumn("OriginalCellSize", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalCellSize);
                this.columnSurveyYear = new global::System.Data.DataColumn("SurveyYear", typeof(ushort), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveyYear);
                this.columnSurveyMonth = new global::System.Data.DataColumn("SurveyMonth", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveyMonth);
                this.columnSurveyDay = new global::System.Data.DataColumn("SurveyDay", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveyDay);
                this.columnSurveyHour = new global::System.Data.DataColumn("SurveyHour", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveyHour);
                this.columnSurveyMin = new global::System.Data.DataColumn("SurveyMin", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveyMin);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDEMSurveyID}, true));
                this.columnDEMSurveyID.AutoIncrement = true;
                this.columnDEMSurveyID.AutoIncrementSeed = 1;
                this.columnDEMSurveyID.AllowDBNull = false;
                this.columnDEMSurveyID.ReadOnly = true;
                this.columnDEMSurveyID.Unique = true;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 255;
                this.columnSource.AllowDBNull = false;
                this.columnSource.MaxLength = 255;
                this.columnProjectID.AllowDBNull = false;
                this.columnProjectID.ReadOnly = true;
                this.columnSingleMethod.DefaultValue = ((bool)(true));
                this.columnMultiMethod.DefaultValue = ((bool)(false));
                this.columnOriginalExtentTop.Caption = "Original";
                this.columnOriginalSource.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEMSurveyRow NewDEMSurveyRow() {
                return ((DEMSurveyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DEMSurveyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DEMSurveyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DEMSurveyRowChanged != null)) {
                    this.DEMSurveyRowChanged(this, new DEMSurveyRowChangeEvent(((DEMSurveyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DEMSurveyRowChanging != null)) {
                    this.DEMSurveyRowChanging(this, new DEMSurveyRowChangeEvent(((DEMSurveyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DEMSurveyRowDeleted != null)) {
                    this.DEMSurveyRowDeleted(this, new DEMSurveyRowChangeEvent(((DEMSurveyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DEMSurveyRowDeleting != null)) {
                    this.DEMSurveyRowDeleting(this, new DEMSurveyRowChangeEvent(((DEMSurveyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDEMSurveyRow(DEMSurveyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectDS ds = new ProjectDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DEMSurveyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AssociatedSurfaceDataTable : global::System.Data.TypedTableBase<AssociatedSurfaceRow> {
            
            private global::System.Data.DataColumn columnAssociatedSurfaceID;
            
            private global::System.Data.DataColumn columnDEMSurveyID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnSource;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnOriginalSource;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AssociatedSurfaceDataTable() {
                this.TableName = "AssociatedSurface";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AssociatedSurfaceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AssociatedSurfaceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AssociatedSurfaceIDColumn {
                get {
                    return this.columnAssociatedSurfaceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEMSurveyIDColumn {
                get {
                    return this.columnDEMSurveyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SourceColumn {
                get {
                    return this.columnSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalSourceColumn {
                get {
                    return this.columnOriginalSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AssociatedSurfaceRow this[int index] {
                get {
                    return ((AssociatedSurfaceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AssociatedSurfaceRowChangeEventHandler AssociatedSurfaceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AssociatedSurfaceRowChangeEventHandler AssociatedSurfaceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AssociatedSurfaceRowChangeEventHandler AssociatedSurfaceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AssociatedSurfaceRowChangeEventHandler AssociatedSurfaceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAssociatedSurfaceRow(AssociatedSurfaceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AssociatedSurfaceRow AddAssociatedSurfaceRow(DEMSurveyRow parentDEMSurveyRowByFK_DEMSurvey_AssociatedSurface, string Name, string Source, string Type, string OriginalSource) {
                AssociatedSurfaceRow rowAssociatedSurfaceRow = ((AssociatedSurfaceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Name,
                        Source,
                        Type,
                        OriginalSource};
                if ((parentDEMSurveyRowByFK_DEMSurvey_AssociatedSurface != null)) {
                    columnValuesArray[1] = parentDEMSurveyRowByFK_DEMSurvey_AssociatedSurface[0];
                }
                rowAssociatedSurfaceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAssociatedSurfaceRow);
                return rowAssociatedSurfaceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AssociatedSurfaceRow FindByAssociatedSurfaceID(int AssociatedSurfaceID) {
                return ((AssociatedSurfaceRow)(this.Rows.Find(new object[] {
                            AssociatedSurfaceID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AssociatedSurfaceDataTable cln = ((AssociatedSurfaceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AssociatedSurfaceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAssociatedSurfaceID = base.Columns["AssociatedSurfaceID"];
                this.columnDEMSurveyID = base.Columns["DEMSurveyID"];
                this.columnName = base.Columns["Name"];
                this.columnSource = base.Columns["Source"];
                this.columnType = base.Columns["Type"];
                this.columnOriginalSource = base.Columns["OriginalSource"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAssociatedSurfaceID = new global::System.Data.DataColumn("AssociatedSurfaceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssociatedSurfaceID);
                this.columnDEMSurveyID = new global::System.Data.DataColumn("DEMSurveyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEMSurveyID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnSource = new global::System.Data.DataColumn("Source", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSource);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnOriginalSource = new global::System.Data.DataColumn("OriginalSource", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalSource);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAssociatedSurfaceID}, true));
                this.columnAssociatedSurfaceID.AutoIncrement = true;
                this.columnAssociatedSurfaceID.AutoIncrementSeed = 1;
                this.columnAssociatedSurfaceID.AllowDBNull = false;
                this.columnAssociatedSurfaceID.Unique = true;
                this.columnDEMSurveyID.AllowDBNull = false;
                this.columnDEMSurveyID.ReadOnly = true;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 255;
                this.columnSource.AllowDBNull = false;
                this.columnSource.MaxLength = 255;
                this.columnOriginalSource.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AssociatedSurfaceRow NewAssociatedSurfaceRow() {
                return ((AssociatedSurfaceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AssociatedSurfaceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AssociatedSurfaceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AssociatedSurfaceRowChanged != null)) {
                    this.AssociatedSurfaceRowChanged(this, new AssociatedSurfaceRowChangeEvent(((AssociatedSurfaceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AssociatedSurfaceRowChanging != null)) {
                    this.AssociatedSurfaceRowChanging(this, new AssociatedSurfaceRowChangeEvent(((AssociatedSurfaceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AssociatedSurfaceRowDeleted != null)) {
                    this.AssociatedSurfaceRowDeleted(this, new AssociatedSurfaceRowChangeEvent(((AssociatedSurfaceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AssociatedSurfaceRowDeleting != null)) {
                    this.AssociatedSurfaceRowDeleting(this, new AssociatedSurfaceRowChangeEvent(((AssociatedSurfaceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAssociatedSurfaceRow(AssociatedSurfaceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectDS ds = new ProjectDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AssociatedSurfaceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ErrorSurfaceDataTable : global::System.Data.TypedTableBase<ErrorSurfaceRow> {
            
            private global::System.Data.DataColumn columnErrorSurfaceID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnSource;
            
            private global::System.Data.DataColumn columnDEMSurveyID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ErrorSurfaceDataTable() {
                this.TableName = "ErrorSurface";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ErrorSurfaceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ErrorSurfaceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ErrorSurfaceIDColumn {
                get {
                    return this.columnErrorSurfaceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SourceColumn {
                get {
                    return this.columnSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEMSurveyIDColumn {
                get {
                    return this.columnDEMSurveyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ErrorSurfaceRow this[int index] {
                get {
                    return ((ErrorSurfaceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ErrorSurfaceRowChangeEventHandler ErrorSurfaceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ErrorSurfaceRowChangeEventHandler ErrorSurfaceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ErrorSurfaceRowChangeEventHandler ErrorSurfaceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ErrorSurfaceRowChangeEventHandler ErrorSurfaceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddErrorSurfaceRow(ErrorSurfaceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ErrorSurfaceRow AddErrorSurfaceRow(string Name, string Type, string Source, DEMSurveyRow parentDEMSurveyRowByDEMSurvey_ErrorTable) {
                ErrorSurfaceRow rowErrorSurfaceRow = ((ErrorSurfaceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Name,
                        Type,
                        Source,
                        null};
                if ((parentDEMSurveyRowByDEMSurvey_ErrorTable != null)) {
                    columnValuesArray[4] = parentDEMSurveyRowByDEMSurvey_ErrorTable[0];
                }
                rowErrorSurfaceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowErrorSurfaceRow);
                return rowErrorSurfaceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ErrorSurfaceRow FindByErrorSurfaceID(int ErrorSurfaceID) {
                return ((ErrorSurfaceRow)(this.Rows.Find(new object[] {
                            ErrorSurfaceID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ErrorSurfaceDataTable cln = ((ErrorSurfaceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ErrorSurfaceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnErrorSurfaceID = base.Columns["ErrorSurfaceID"];
                this.columnName = base.Columns["Name"];
                this.columnType = base.Columns["Type"];
                this.columnSource = base.Columns["Source"];
                this.columnDEMSurveyID = base.Columns["DEMSurveyID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnErrorSurfaceID = new global::System.Data.DataColumn("ErrorSurfaceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnErrorSurfaceID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnSource = new global::System.Data.DataColumn("Source", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSource);
                this.columnDEMSurveyID = new global::System.Data.DataColumn("DEMSurveyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEMSurveyID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnErrorSurfaceID}, true));
                this.columnErrorSurfaceID.AutoIncrement = true;
                this.columnErrorSurfaceID.AutoIncrementSeed = 1;
                this.columnErrorSurfaceID.AllowDBNull = false;
                this.columnErrorSurfaceID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ErrorSurfaceRow NewErrorSurfaceRow() {
                return ((ErrorSurfaceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ErrorSurfaceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ErrorSurfaceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ErrorSurfaceRowChanged != null)) {
                    this.ErrorSurfaceRowChanged(this, new ErrorSurfaceRowChangeEvent(((ErrorSurfaceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ErrorSurfaceRowChanging != null)) {
                    this.ErrorSurfaceRowChanging(this, new ErrorSurfaceRowChangeEvent(((ErrorSurfaceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ErrorSurfaceRowDeleted != null)) {
                    this.ErrorSurfaceRowDeleted(this, new ErrorSurfaceRowChangeEvent(((ErrorSurfaceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ErrorSurfaceRowDeleting != null)) {
                    this.ErrorSurfaceRowDeleting(this, new ErrorSurfaceRowChangeEvent(((ErrorSurfaceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveErrorSurfaceRow(ErrorSurfaceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectDS ds = new ProjectDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ErrorSurfaceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MultiErrorPropertiesDataTable : global::System.Data.TypedTableBase<MultiErrorPropertiesRow> {
            
            private global::System.Data.DataColumn columnMultiErrorID;
            
            private global::System.Data.DataColumn columnMethod;
            
            private global::System.Data.DataColumn columnError;
            
            private global::System.Data.DataColumn columnErrorID;
            
            private global::System.Data.DataColumn columnErrorType;
            
            private global::System.Data.DataColumn columnAssociatedSurfaceID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MultiErrorPropertiesDataTable() {
                this.TableName = "MultiErrorProperties";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MultiErrorPropertiesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MultiErrorPropertiesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MultiErrorIDColumn {
                get {
                    return this.columnMultiErrorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MethodColumn {
                get {
                    return this.columnMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ErrorColumn {
                get {
                    return this.columnError;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ErrorIDColumn {
                get {
                    return this.columnErrorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ErrorTypeColumn {
                get {
                    return this.columnErrorType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AssociatedSurfaceIDColumn {
                get {
                    return this.columnAssociatedSurfaceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MultiErrorPropertiesRow this[int index] {
                get {
                    return ((MultiErrorPropertiesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MultiErrorPropertiesRowChangeEventHandler MultiErrorPropertiesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MultiErrorPropertiesRowChangeEventHandler MultiErrorPropertiesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MultiErrorPropertiesRowChangeEventHandler MultiErrorPropertiesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MultiErrorPropertiesRowChangeEventHandler MultiErrorPropertiesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMultiErrorPropertiesRow(MultiErrorPropertiesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MultiErrorPropertiesRow AddMultiErrorPropertiesRow(string Method, string _Error, ErrorSurfaceRow parentErrorSurfaceRowByErrorTable_MultiErrorProperties, string ErrorType, int AssociatedSurfaceID) {
                MultiErrorPropertiesRow rowMultiErrorPropertiesRow = ((MultiErrorPropertiesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Method,
                        _Error,
                        null,
                        ErrorType,
                        AssociatedSurfaceID};
                if ((parentErrorSurfaceRowByErrorTable_MultiErrorProperties != null)) {
                    columnValuesArray[3] = parentErrorSurfaceRowByErrorTable_MultiErrorProperties[0];
                }
                rowMultiErrorPropertiesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMultiErrorPropertiesRow);
                return rowMultiErrorPropertiesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MultiErrorPropertiesRow FindByMultiErrorID(int MultiErrorID) {
                return ((MultiErrorPropertiesRow)(this.Rows.Find(new object[] {
                            MultiErrorID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MultiErrorPropertiesDataTable cln = ((MultiErrorPropertiesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MultiErrorPropertiesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnMultiErrorID = base.Columns["MultiErrorID"];
                this.columnMethod = base.Columns["Method"];
                this.columnError = base.Columns["Error"];
                this.columnErrorID = base.Columns["ErrorID"];
                this.columnErrorType = base.Columns["ErrorType"];
                this.columnAssociatedSurfaceID = base.Columns["AssociatedSurfaceID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnMultiErrorID = new global::System.Data.DataColumn("MultiErrorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMultiErrorID);
                this.columnMethod = new global::System.Data.DataColumn("Method", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethod);
                this.columnError = new global::System.Data.DataColumn("Error", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnError.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_Error");
                this.columnError.ExtendedProperties.Add("Generator_UserColumnName", "Error");
                base.Columns.Add(this.columnError);
                this.columnErrorID = new global::System.Data.DataColumn("ErrorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnErrorID);
                this.columnErrorType = new global::System.Data.DataColumn("ErrorType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnErrorType);
                this.columnAssociatedSurfaceID = new global::System.Data.DataColumn("AssociatedSurfaceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssociatedSurfaceID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMultiErrorID}, true));
                this.columnMultiErrorID.AutoIncrement = true;
                this.columnMultiErrorID.AutoIncrementSeed = 1;
                this.columnMultiErrorID.AllowDBNull = false;
                this.columnMultiErrorID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MultiErrorPropertiesRow NewMultiErrorPropertiesRow() {
                return ((MultiErrorPropertiesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MultiErrorPropertiesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MultiErrorPropertiesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MultiErrorPropertiesRowChanged != null)) {
                    this.MultiErrorPropertiesRowChanged(this, new MultiErrorPropertiesRowChangeEvent(((MultiErrorPropertiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MultiErrorPropertiesRowChanging != null)) {
                    this.MultiErrorPropertiesRowChanging(this, new MultiErrorPropertiesRowChangeEvent(((MultiErrorPropertiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MultiErrorPropertiesRowDeleted != null)) {
                    this.MultiErrorPropertiesRowDeleted(this, new MultiErrorPropertiesRowChangeEvent(((MultiErrorPropertiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MultiErrorPropertiesRowDeleting != null)) {
                    this.MultiErrorPropertiesRowDeleting(this, new MultiErrorPropertiesRowChangeEvent(((MultiErrorPropertiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMultiErrorPropertiesRow(MultiErrorPropertiesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectDS ds = new ProjectDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MultiErrorPropertiesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FISInputsDataTable : global::System.Data.TypedTableBase<FISInputsRow> {
            
            private global::System.Data.DataColumn columnFISInputsID;
            
            private global::System.Data.DataColumn columnErrorID;
            
            private global::System.Data.DataColumn columnFISInput;
            
            private global::System.Data.DataColumn columnAssociatedSurface;
            
            private global::System.Data.DataColumn columnFIS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FISInputsDataTable() {
                this.TableName = "FISInputs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FISInputsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FISInputsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FISInputsIDColumn {
                get {
                    return this.columnFISInputsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ErrorIDColumn {
                get {
                    return this.columnErrorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FISInputColumn {
                get {
                    return this.columnFISInput;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AssociatedSurfaceColumn {
                get {
                    return this.columnAssociatedSurface;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FISColumn {
                get {
                    return this.columnFIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FISInputsRow this[int index] {
                get {
                    return ((FISInputsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FISInputsRowChangeEventHandler FISInputsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FISInputsRowChangeEventHandler FISInputsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FISInputsRowChangeEventHandler FISInputsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FISInputsRowChangeEventHandler FISInputsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFISInputsRow(FISInputsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FISInputsRow AddFISInputsRow(ErrorSurfaceRow parentErrorSurfaceRowByFK_ErrorTable_FISInputs, string FISInput, string AssociatedSurface, string FIS) {
                FISInputsRow rowFISInputsRow = ((FISInputsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        FISInput,
                        AssociatedSurface,
                        FIS};
                if ((parentErrorSurfaceRowByFK_ErrorTable_FISInputs != null)) {
                    columnValuesArray[1] = parentErrorSurfaceRowByFK_ErrorTable_FISInputs[0];
                }
                rowFISInputsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFISInputsRow);
                return rowFISInputsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FISInputsDataTable cln = ((FISInputsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FISInputsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFISInputsID = base.Columns["FISInputsID"];
                this.columnErrorID = base.Columns["ErrorID"];
                this.columnFISInput = base.Columns["FISInput"];
                this.columnAssociatedSurface = base.Columns["AssociatedSurface"];
                this.columnFIS = base.Columns["FIS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFISInputsID = new global::System.Data.DataColumn("FISInputsID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFISInputsID);
                this.columnErrorID = new global::System.Data.DataColumn("ErrorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnErrorID);
                this.columnFISInput = new global::System.Data.DataColumn("FISInput", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFISInput);
                this.columnAssociatedSurface = new global::System.Data.DataColumn("AssociatedSurface", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssociatedSurface);
                this.columnFIS = new global::System.Data.DataColumn("FIS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFISInputsID}, false));
                this.columnFISInputsID.AutoIncrement = true;
                this.columnFISInputsID.AutoIncrementSeed = 1;
                this.columnFISInputsID.AllowDBNull = false;
                this.columnFISInputsID.ReadOnly = true;
                this.columnFISInputsID.Unique = true;
                this.columnErrorID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FISInputsRow NewFISInputsRow() {
                return ((FISInputsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FISInputsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FISInputsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FISInputsRowChanged != null)) {
                    this.FISInputsRowChanged(this, new FISInputsRowChangeEvent(((FISInputsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FISInputsRowChanging != null)) {
                    this.FISInputsRowChanging(this, new FISInputsRowChangeEvent(((FISInputsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FISInputsRowDeleted != null)) {
                    this.FISInputsRowDeleted(this, new FISInputsRowChangeEvent(((FISInputsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FISInputsRowDeleting != null)) {
                    this.FISInputsRowDeleting(this, new FISInputsRowChangeEvent(((FISInputsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFISInputsRow(FISInputsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectDS ds = new ProjectDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FISInputsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DoDsDataTable : global::System.Data.TypedTableBase<DoDsRow> {
            
            private global::System.Data.DataColumn columnDoDID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnOutputFolder;
            
            private global::System.Data.DataColumn columnNewSurveyName;
            
            private global::System.Data.DataColumn columnOldSurveyName;
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnNewErrorName;
            
            private global::System.Data.DataColumn columnOldErrorName;
            
            private global::System.Data.DataColumn columnTypeMinLOD;
            
            private global::System.Data.DataColumn columnTypePropagated;
            
            private global::System.Data.DataColumn columnTypeProbabilistic;
            
            private global::System.Data.DataColumn columnThreshold;
            
            private global::System.Data.DataColumn columnBayesian;
            
            private global::System.Data.DataColumn columnFilter;
            
            private global::System.Data.DataColumn columnPercentLess;
            
            private global::System.Data.DataColumn columnPercentMore;
            
            private global::System.Data.DataColumn columnRawDoDPath;
            
            private global::System.Data.DataColumn columnThreshDoDPath;
            
            private global::System.Data.DataColumn columnRawHistPath;
            
            private global::System.Data.DataColumn columnThreshHistPath;
            
            private global::System.Data.DataColumn columnSummaryXMLPath;
            
            private global::System.Data.DataColumn columnCellArea;
            
            private global::System.Data.DataColumn columnAreaErosionRaw;
            
            private global::System.Data.DataColumn columnAreaDepositonRaw;
            
            private global::System.Data.DataColumn columnAreaErosionThresholded;
            
            private global::System.Data.DataColumn columnAreaDepositionThresholded;
            
            private global::System.Data.DataColumn columnVolumeErosionRaw;
            
            private global::System.Data.DataColumn columnVolumeDepositionRaw;
            
            private global::System.Data.DataColumn columnVolumeErosionThresholded;
            
            private global::System.Data.DataColumn columnVolumeDepositionThresholded;
            
            private global::System.Data.DataColumn columnVolumeErosionError;
            
            private global::System.Data.DataColumn columnVolumeDepositionError;
            
            private global::System.Data.DataColumn columnPropagatedErrorRasterPath;
            
            private global::System.Data.DataColumn columnProbabilityRaster;
            
            private global::System.Data.DataColumn columnConditionalProbRaster;
            
            private global::System.Data.DataColumn columnPosteriorRaster;
            
            private global::System.Data.DataColumn columnSpatialCoDepositionRaster;
            
            private global::System.Data.DataColumn columnSpatialCoErosionRaster;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DoDsDataTable() {
                this.TableName = "DoDs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DoDsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DoDsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DoDIDColumn {
                get {
                    return this.columnDoDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutputFolderColumn {
                get {
                    return this.columnOutputFolder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NewSurveyNameColumn {
                get {
                    return this.columnNewSurveyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OldSurveyNameColumn {
                get {
                    return this.columnOldSurveyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NewErrorNameColumn {
                get {
                    return this.columnNewErrorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OldErrorNameColumn {
                get {
                    return this.columnOldErrorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeMinLODColumn {
                get {
                    return this.columnTypeMinLOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypePropagatedColumn {
                get {
                    return this.columnTypePropagated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeProbabilisticColumn {
                get {
                    return this.columnTypeProbabilistic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThresholdColumn {
                get {
                    return this.columnThreshold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BayesianColumn {
                get {
                    return this.columnBayesian;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FilterColumn {
                get {
                    return this.columnFilter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PercentLessColumn {
                get {
                    return this.columnPercentLess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PercentMoreColumn {
                get {
                    return this.columnPercentMore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RawDoDPathColumn {
                get {
                    return this.columnRawDoDPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThreshDoDPathColumn {
                get {
                    return this.columnThreshDoDPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RawHistPathColumn {
                get {
                    return this.columnRawHistPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThreshHistPathColumn {
                get {
                    return this.columnThreshHistPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SummaryXMLPathColumn {
                get {
                    return this.columnSummaryXMLPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CellAreaColumn {
                get {
                    return this.columnCellArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaErosionRawColumn {
                get {
                    return this.columnAreaErosionRaw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaDepositonRawColumn {
                get {
                    return this.columnAreaDepositonRaw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaErosionThresholdedColumn {
                get {
                    return this.columnAreaErosionThresholded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaDepositionThresholdedColumn {
                get {
                    return this.columnAreaDepositionThresholded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumeErosionRawColumn {
                get {
                    return this.columnVolumeErosionRaw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumeDepositionRawColumn {
                get {
                    return this.columnVolumeDepositionRaw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumeErosionThresholdedColumn {
                get {
                    return this.columnVolumeErosionThresholded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumeDepositionThresholdedColumn {
                get {
                    return this.columnVolumeDepositionThresholded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumeErosionErrorColumn {
                get {
                    return this.columnVolumeErosionError;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumeDepositionErrorColumn {
                get {
                    return this.columnVolumeDepositionError;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PropagatedErrorRasterPathColumn {
                get {
                    return this.columnPropagatedErrorRasterPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProbabilityRasterColumn {
                get {
                    return this.columnProbabilityRaster;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConditionalProbRasterColumn {
                get {
                    return this.columnConditionalProbRaster;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PosteriorRasterColumn {
                get {
                    return this.columnPosteriorRaster;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpatialCoDepositionRasterColumn {
                get {
                    return this.columnSpatialCoDepositionRaster;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpatialCoErosionRasterColumn {
                get {
                    return this.columnSpatialCoErosionRaster;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DoDsRow this[int index] {
                get {
                    return ((DoDsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DoDsRowChangeEventHandler DoDsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DoDsRowChangeEventHandler DoDsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DoDsRowChangeEventHandler DoDsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DoDsRowChangeEventHandler DoDsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDoDsRow(DoDsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DoDsRow AddDoDsRow(
                        string Name, 
                        string OutputFolder, 
                        string NewSurveyName, 
                        string OldSurveyName, 
                        ProjectRow parentProjectRowByFK_Project_DoDTable, 
                        string NewErrorName, 
                        string OldErrorName, 
                        bool TypeMinLOD, 
                        bool TypePropagated, 
                        bool TypeProbabilistic, 
                        double Threshold, 
                        bool Bayesian, 
                        int Filter, 
                        int PercentLess, 
                        int PercentMore, 
                        string RawDoDPath, 
                        string ThreshDoDPath, 
                        string RawHistPath, 
                        string ThreshHistPath, 
                        string SummaryXMLPath, 
                        double CellArea, 
                        double AreaErosionRaw, 
                        double AreaDepositonRaw, 
                        double AreaErosionThresholded, 
                        double AreaDepositionThresholded, 
                        double VolumeErosionRaw, 
                        double VolumeDepositionRaw, 
                        double VolumeErosionThresholded, 
                        double VolumeDepositionThresholded, 
                        double VolumeErosionError, 
                        double VolumeDepositionError, 
                        string PropagatedErrorRasterPath, 
                        string ProbabilityRaster, 
                        string ConditionalProbRaster, 
                        string PosteriorRaster, 
                        string SpatialCoDepositionRaster, 
                        string SpatialCoErosionRaster) {
                DoDsRow rowDoDsRow = ((DoDsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Name,
                        OutputFolder,
                        NewSurveyName,
                        OldSurveyName,
                        null,
                        NewErrorName,
                        OldErrorName,
                        TypeMinLOD,
                        TypePropagated,
                        TypeProbabilistic,
                        Threshold,
                        Bayesian,
                        Filter,
                        PercentLess,
                        PercentMore,
                        RawDoDPath,
                        ThreshDoDPath,
                        RawHistPath,
                        ThreshHistPath,
                        SummaryXMLPath,
                        CellArea,
                        AreaErosionRaw,
                        AreaDepositonRaw,
                        AreaErosionThresholded,
                        AreaDepositionThresholded,
                        VolumeErosionRaw,
                        VolumeDepositionRaw,
                        VolumeErosionThresholded,
                        VolumeDepositionThresholded,
                        VolumeErosionError,
                        VolumeDepositionError,
                        PropagatedErrorRasterPath,
                        ProbabilityRaster,
                        ConditionalProbRaster,
                        PosteriorRaster,
                        SpatialCoDepositionRaster,
                        SpatialCoErosionRaster};
                if ((parentProjectRowByFK_Project_DoDTable != null)) {
                    columnValuesArray[5] = parentProjectRowByFK_Project_DoDTable[0];
                }
                rowDoDsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDoDsRow);
                return rowDoDsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DoDsRow FindByDoDID(int DoDID) {
                return ((DoDsRow)(this.Rows.Find(new object[] {
                            DoDID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DoDsDataTable cln = ((DoDsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DoDsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnDoDID = base.Columns["DoDID"];
                this.columnName = base.Columns["Name"];
                this.columnOutputFolder = base.Columns["OutputFolder"];
                this.columnNewSurveyName = base.Columns["NewSurveyName"];
                this.columnOldSurveyName = base.Columns["OldSurveyName"];
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnNewErrorName = base.Columns["NewErrorName"];
                this.columnOldErrorName = base.Columns["OldErrorName"];
                this.columnTypeMinLOD = base.Columns["TypeMinLOD"];
                this.columnTypePropagated = base.Columns["TypePropagated"];
                this.columnTypeProbabilistic = base.Columns["TypeProbabilistic"];
                this.columnThreshold = base.Columns["Threshold"];
                this.columnBayesian = base.Columns["Bayesian"];
                this.columnFilter = base.Columns["Filter"];
                this.columnPercentLess = base.Columns["PercentLess"];
                this.columnPercentMore = base.Columns["PercentMore"];
                this.columnRawDoDPath = base.Columns["RawDoDPath"];
                this.columnThreshDoDPath = base.Columns["ThreshDoDPath"];
                this.columnRawHistPath = base.Columns["RawHistPath"];
                this.columnThreshHistPath = base.Columns["ThreshHistPath"];
                this.columnSummaryXMLPath = base.Columns["SummaryXMLPath"];
                this.columnCellArea = base.Columns["CellArea"];
                this.columnAreaErosionRaw = base.Columns["AreaErosionRaw"];
                this.columnAreaDepositonRaw = base.Columns["AreaDepositonRaw"];
                this.columnAreaErosionThresholded = base.Columns["AreaErosionThresholded"];
                this.columnAreaDepositionThresholded = base.Columns["AreaDepositionThresholded"];
                this.columnVolumeErosionRaw = base.Columns["VolumeErosionRaw"];
                this.columnVolumeDepositionRaw = base.Columns["VolumeDepositionRaw"];
                this.columnVolumeErosionThresholded = base.Columns["VolumeErosionThresholded"];
                this.columnVolumeDepositionThresholded = base.Columns["VolumeDepositionThresholded"];
                this.columnVolumeErosionError = base.Columns["VolumeErosionError"];
                this.columnVolumeDepositionError = base.Columns["VolumeDepositionError"];
                this.columnPropagatedErrorRasterPath = base.Columns["PropagatedErrorRasterPath"];
                this.columnProbabilityRaster = base.Columns["ProbabilityRaster"];
                this.columnConditionalProbRaster = base.Columns["ConditionalProbRaster"];
                this.columnPosteriorRaster = base.Columns["PosteriorRaster"];
                this.columnSpatialCoDepositionRaster = base.Columns["SpatialCoDepositionRaster"];
                this.columnSpatialCoErosionRaster = base.Columns["SpatialCoErosionRaster"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnDoDID = new global::System.Data.DataColumn("DoDID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoDID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnOutputFolder = new global::System.Data.DataColumn("OutputFolder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutputFolder);
                this.columnNewSurveyName = new global::System.Data.DataColumn("NewSurveyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewSurveyName);
                this.columnOldSurveyName = new global::System.Data.DataColumn("OldSurveyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldSurveyName);
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnNewErrorName = new global::System.Data.DataColumn("NewErrorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewErrorName);
                this.columnOldErrorName = new global::System.Data.DataColumn("OldErrorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldErrorName);
                this.columnTypeMinLOD = new global::System.Data.DataColumn("TypeMinLOD", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeMinLOD);
                this.columnTypePropagated = new global::System.Data.DataColumn("TypePropagated", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypePropagated);
                this.columnTypeProbabilistic = new global::System.Data.DataColumn("TypeProbabilistic", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeProbabilistic);
                this.columnThreshold = new global::System.Data.DataColumn("Threshold", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThreshold);
                this.columnBayesian = new global::System.Data.DataColumn("Bayesian", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBayesian);
                this.columnFilter = new global::System.Data.DataColumn("Filter", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilter);
                this.columnPercentLess = new global::System.Data.DataColumn("PercentLess", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentLess);
                this.columnPercentMore = new global::System.Data.DataColumn("PercentMore", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentMore);
                this.columnRawDoDPath = new global::System.Data.DataColumn("RawDoDPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRawDoDPath);
                this.columnThreshDoDPath = new global::System.Data.DataColumn("ThreshDoDPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThreshDoDPath);
                this.columnRawHistPath = new global::System.Data.DataColumn("RawHistPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRawHistPath);
                this.columnThreshHistPath = new global::System.Data.DataColumn("ThreshHistPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThreshHistPath);
                this.columnSummaryXMLPath = new global::System.Data.DataColumn("SummaryXMLPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSummaryXMLPath);
                this.columnCellArea = new global::System.Data.DataColumn("CellArea", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCellArea);
                this.columnAreaErosionRaw = new global::System.Data.DataColumn("AreaErosionRaw", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaErosionRaw);
                this.columnAreaDepositonRaw = new global::System.Data.DataColumn("AreaDepositonRaw", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaDepositonRaw);
                this.columnAreaErosionThresholded = new global::System.Data.DataColumn("AreaErosionThresholded", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaErosionThresholded);
                this.columnAreaDepositionThresholded = new global::System.Data.DataColumn("AreaDepositionThresholded", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaDepositionThresholded);
                this.columnVolumeErosionRaw = new global::System.Data.DataColumn("VolumeErosionRaw", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumeErosionRaw);
                this.columnVolumeDepositionRaw = new global::System.Data.DataColumn("VolumeDepositionRaw", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumeDepositionRaw);
                this.columnVolumeErosionThresholded = new global::System.Data.DataColumn("VolumeErosionThresholded", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumeErosionThresholded);
                this.columnVolumeDepositionThresholded = new global::System.Data.DataColumn("VolumeDepositionThresholded", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumeDepositionThresholded);
                this.columnVolumeErosionError = new global::System.Data.DataColumn("VolumeErosionError", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumeErosionError);
                this.columnVolumeDepositionError = new global::System.Data.DataColumn("VolumeDepositionError", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumeDepositionError);
                this.columnPropagatedErrorRasterPath = new global::System.Data.DataColumn("PropagatedErrorRasterPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropagatedErrorRasterPath);
                this.columnProbabilityRaster = new global::System.Data.DataColumn("ProbabilityRaster", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProbabilityRaster);
                this.columnConditionalProbRaster = new global::System.Data.DataColumn("ConditionalProbRaster", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConditionalProbRaster);
                this.columnPosteriorRaster = new global::System.Data.DataColumn("PosteriorRaster", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosteriorRaster);
                this.columnSpatialCoDepositionRaster = new global::System.Data.DataColumn("SpatialCoDepositionRaster", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpatialCoDepositionRaster);
                this.columnSpatialCoErosionRaster = new global::System.Data.DataColumn("SpatialCoErosionRaster", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpatialCoErosionRaster);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDoDID}, true));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnName}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint3", new global::System.Data.DataColumn[] {
                                this.columnOutputFolder}, false));
                this.columnDoDID.AutoIncrement = true;
                this.columnDoDID.AutoIncrementSeed = 1;
                this.columnDoDID.AllowDBNull = false;
                this.columnDoDID.ReadOnly = true;
                this.columnDoDID.Unique = true;
                this.columnName.AllowDBNull = false;
                this.columnName.Unique = true;
                this.columnOutputFolder.AllowDBNull = false;
                this.columnOutputFolder.ReadOnly = true;
                this.columnOutputFolder.Unique = true;
                this.columnNewSurveyName.AllowDBNull = false;
                this.columnOldSurveyName.AllowDBNull = false;
                this.columnProjectID.AllowDBNull = false;
                this.columnProjectID.ReadOnly = true;
                this.columnTypeMinLOD.AllowDBNull = false;
                this.columnTypePropagated.AllowDBNull = false;
                this.columnTypeProbabilistic.AllowDBNull = false;
                this.columnRawDoDPath.AllowDBNull = false;
                this.columnThreshDoDPath.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DoDsRow NewDoDsRow() {
                return ((DoDsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DoDsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DoDsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DoDsRowChanged != null)) {
                    this.DoDsRowChanged(this, new DoDsRowChangeEvent(((DoDsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DoDsRowChanging != null)) {
                    this.DoDsRowChanging(this, new DoDsRowChangeEvent(((DoDsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DoDsRowDeleted != null)) {
                    this.DoDsRowDeleted(this, new DoDsRowChangeEvent(((DoDsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DoDsRowDeleting != null)) {
                    this.DoDsRowDeleting(this, new DoDsRowChangeEvent(((DoDsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDoDsRow(DoDsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectDS ds = new ProjectDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DoDsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BudgetSegregationsDataTable : global::System.Data.TypedTableBase<BudgetSegregationsRow> {
            
            private global::System.Data.DataColumn columnBudgetID;
            
            private global::System.Data.DataColumn columnDoDID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnPolygonMask;
            
            private global::System.Data.DataColumn columnField;
            
            private global::System.Data.DataColumn columnOutputFolder;
            
            private global::System.Data.DataColumn columnPCDepositoonVolPie;
            
            private global::System.Data.DataColumn columnPCErosionVolPie;
            
            private global::System.Data.DataColumn columnPCTotalVolPie;
            
            private global::System.Data.DataColumn columnClassLegendPath;
            
            private global::System.Data.DataColumn columnClassSummaryPath;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BudgetSegregationsDataTable() {
                this.TableName = "BudgetSegregations";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BudgetSegregationsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BudgetSegregationsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BudgetIDColumn {
                get {
                    return this.columnBudgetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DoDIDColumn {
                get {
                    return this.columnDoDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PolygonMaskColumn {
                get {
                    return this.columnPolygonMask;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FieldColumn {
                get {
                    return this.columnField;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutputFolderColumn {
                get {
                    return this.columnOutputFolder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCDepositoonVolPieColumn {
                get {
                    return this.columnPCDepositoonVolPie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCErosionVolPieColumn {
                get {
                    return this.columnPCErosionVolPie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCTotalVolPieColumn {
                get {
                    return this.columnPCTotalVolPie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClassLegendPathColumn {
                get {
                    return this.columnClassLegendPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClassSummaryPathColumn {
                get {
                    return this.columnClassSummaryPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BudgetSegregationsRow this[int index] {
                get {
                    return ((BudgetSegregationsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BudgetSegregationsRowChangeEventHandler BudgetSegregationsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BudgetSegregationsRowChangeEventHandler BudgetSegregationsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BudgetSegregationsRowChangeEventHandler BudgetSegregationsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BudgetSegregationsRowChangeEventHandler BudgetSegregationsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBudgetSegregationsRow(BudgetSegregationsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BudgetSegregationsRow AddBudgetSegregationsRow(DoDsRow parentDoDsRowByFK_DoDs_BudgetSegregations, string Name, string PolygonMask, string Field, string OutputFolder, string PCDepositoonVolPie, string PCErosionVolPie, string PCTotalVolPie, string ClassLegendPath, string ClassSummaryPath) {
                BudgetSegregationsRow rowBudgetSegregationsRow = ((BudgetSegregationsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Name,
                        PolygonMask,
                        Field,
                        OutputFolder,
                        PCDepositoonVolPie,
                        PCErosionVolPie,
                        PCTotalVolPie,
                        ClassLegendPath,
                        ClassSummaryPath};
                if ((parentDoDsRowByFK_DoDs_BudgetSegregations != null)) {
                    columnValuesArray[1] = parentDoDsRowByFK_DoDs_BudgetSegregations[0];
                }
                rowBudgetSegregationsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBudgetSegregationsRow);
                return rowBudgetSegregationsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BudgetSegregationsDataTable cln = ((BudgetSegregationsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BudgetSegregationsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnBudgetID = base.Columns["BudgetID"];
                this.columnDoDID = base.Columns["DoDID"];
                this.columnName = base.Columns["Name"];
                this.columnPolygonMask = base.Columns["PolygonMask"];
                this.columnField = base.Columns["Field"];
                this.columnOutputFolder = base.Columns["OutputFolder"];
                this.columnPCDepositoonVolPie = base.Columns["PCDepositoonVolPie"];
                this.columnPCErosionVolPie = base.Columns["PCErosionVolPie"];
                this.columnPCTotalVolPie = base.Columns["PCTotalVolPie"];
                this.columnClassLegendPath = base.Columns["ClassLegendPath"];
                this.columnClassSummaryPath = base.Columns["ClassSummaryPath"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnBudgetID = new global::System.Data.DataColumn("BudgetID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudgetID);
                this.columnDoDID = new global::System.Data.DataColumn("DoDID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoDID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnPolygonMask = new global::System.Data.DataColumn("PolygonMask", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPolygonMask);
                this.columnField = new global::System.Data.DataColumn("Field", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnField);
                this.columnOutputFolder = new global::System.Data.DataColumn("OutputFolder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutputFolder);
                this.columnPCDepositoonVolPie = new global::System.Data.DataColumn("PCDepositoonVolPie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDepositoonVolPie);
                this.columnPCErosionVolPie = new global::System.Data.DataColumn("PCErosionVolPie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCErosionVolPie);
                this.columnPCTotalVolPie = new global::System.Data.DataColumn("PCTotalVolPie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCTotalVolPie);
                this.columnClassLegendPath = new global::System.Data.DataColumn("ClassLegendPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassLegendPath);
                this.columnClassSummaryPath = new global::System.Data.DataColumn("ClassSummaryPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassSummaryPath);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBudgetID}, false));
                this.columnBudgetID.AutoIncrement = true;
                this.columnBudgetID.AutoIncrementSeed = 1;
                this.columnBudgetID.AllowDBNull = false;
                this.columnBudgetID.ReadOnly = true;
                this.columnBudgetID.Unique = true;
                this.columnDoDID.AllowDBNull = false;
                this.columnDoDID.ReadOnly = true;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 255;
                this.columnPolygonMask.AllowDBNull = false;
                this.columnPolygonMask.MaxLength = 255;
                this.columnField.AllowDBNull = false;
                this.columnOutputFolder.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BudgetSegregationsRow NewBudgetSegregationsRow() {
                return ((BudgetSegregationsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BudgetSegregationsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BudgetSegregationsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BudgetSegregationsRowChanged != null)) {
                    this.BudgetSegregationsRowChanged(this, new BudgetSegregationsRowChangeEvent(((BudgetSegregationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BudgetSegregationsRowChanging != null)) {
                    this.BudgetSegregationsRowChanging(this, new BudgetSegregationsRowChangeEvent(((BudgetSegregationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BudgetSegregationsRowDeleted != null)) {
                    this.BudgetSegregationsRowDeleted(this, new BudgetSegregationsRowChangeEvent(((BudgetSegregationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BudgetSegregationsRowDeleting != null)) {
                    this.BudgetSegregationsRowDeleting(this, new BudgetSegregationsRowChangeEvent(((BudgetSegregationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBudgetSegregationsRow(BudgetSegregationsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectDS ds = new ProjectDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BudgetSegregationsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BSMasksDataTable : global::System.Data.TypedTableBase<BSMasksRow> {
            
            private global::System.Data.DataColumn columnMaskID;
            
            private global::System.Data.DataColumn columnBudgetID;
            
            private global::System.Data.DataColumn columnMaskValue;
            
            private global::System.Data.DataColumn columnMaskName;
            
            private global::System.Data.DataColumn columnAreaErosionRaw;
            
            private global::System.Data.DataColumn columnAreaDepositionRaw;
            
            private global::System.Data.DataColumn columnAreaErosionThresholded;
            
            private global::System.Data.DataColumn columnAreaDepositionThresholded;
            
            private global::System.Data.DataColumn columnVolumeErosionRaw;
            
            private global::System.Data.DataColumn columnVolumeDepositionRaw;
            
            private global::System.Data.DataColumn columnVolumeErosionThresholded;
            
            private global::System.Data.DataColumn columnVolumeDepositionThresholded;
            
            private global::System.Data.DataColumn columnVolumeErosionError;
            
            private global::System.Data.DataColumn columnVolumeDepositionError;
            
            private global::System.Data.DataColumn columnAreaChartPath;
            
            private global::System.Data.DataColumn columnVolumeChartPath;
            
            private global::System.Data.DataColumn columnSummaryXMLPath;
            
            private global::System.Data.DataColumn columnCSVFileName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BSMasksDataTable() {
                this.TableName = "BSMasks";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BSMasksDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BSMasksDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaskIDColumn {
                get {
                    return this.columnMaskID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BudgetIDColumn {
                get {
                    return this.columnBudgetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaskValueColumn {
                get {
                    return this.columnMaskValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaskNameColumn {
                get {
                    return this.columnMaskName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaErosionRawColumn {
                get {
                    return this.columnAreaErosionRaw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaDepositionRawColumn {
                get {
                    return this.columnAreaDepositionRaw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaErosionThresholdedColumn {
                get {
                    return this.columnAreaErosionThresholded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaDepositionThresholdedColumn {
                get {
                    return this.columnAreaDepositionThresholded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumeErosionRawColumn {
                get {
                    return this.columnVolumeErosionRaw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumeDepositionRawColumn {
                get {
                    return this.columnVolumeDepositionRaw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumeErosionThresholdedColumn {
                get {
                    return this.columnVolumeErosionThresholded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumeDepositionThresholdedColumn {
                get {
                    return this.columnVolumeDepositionThresholded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumeErosionErrorColumn {
                get {
                    return this.columnVolumeErosionError;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumeDepositionErrorColumn {
                get {
                    return this.columnVolumeDepositionError;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaChartPathColumn {
                get {
                    return this.columnAreaChartPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumeChartPathColumn {
                get {
                    return this.columnVolumeChartPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SummaryXMLPathColumn {
                get {
                    return this.columnSummaryXMLPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CSVFileNameColumn {
                get {
                    return this.columnCSVFileName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BSMasksRow this[int index] {
                get {
                    return ((BSMasksRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BSMasksRowChangeEventHandler BSMasksRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BSMasksRowChangeEventHandler BSMasksRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BSMasksRowChangeEventHandler BSMasksRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BSMasksRowChangeEventHandler BSMasksRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBSMasksRow(BSMasksRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BSMasksRow AddBSMasksRow(
                        BudgetSegregationsRow parentBudgetSegregationsRowByFK_BudgetSegregations_BSMasks, 
                        int MaskValue, 
                        string MaskName, 
                        double AreaErosionRaw, 
                        double AreaDepositionRaw, 
                        double AreaErosionThresholded, 
                        double AreaDepositionThresholded, 
                        double VolumeErosionRaw, 
                        double VolumeDepositionRaw, 
                        double VolumeErosionThresholded, 
                        double VolumeDepositionThresholded, 
                        double VolumeErosionError, 
                        double VolumeDepositionError, 
                        string AreaChartPath, 
                        string VolumeChartPath, 
                        string SummaryXMLPath, 
                        string CSVFileName) {
                BSMasksRow rowBSMasksRow = ((BSMasksRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        MaskValue,
                        MaskName,
                        AreaErosionRaw,
                        AreaDepositionRaw,
                        AreaErosionThresholded,
                        AreaDepositionThresholded,
                        VolumeErosionRaw,
                        VolumeDepositionRaw,
                        VolumeErosionThresholded,
                        VolumeDepositionThresholded,
                        VolumeErosionError,
                        VolumeDepositionError,
                        AreaChartPath,
                        VolumeChartPath,
                        SummaryXMLPath,
                        CSVFileName};
                if ((parentBudgetSegregationsRowByFK_BudgetSegregations_BSMasks != null)) {
                    columnValuesArray[1] = parentBudgetSegregationsRowByFK_BudgetSegregations_BSMasks[0];
                }
                rowBSMasksRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBSMasksRow);
                return rowBSMasksRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BSMasksDataTable cln = ((BSMasksDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BSMasksDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnMaskID = base.Columns["MaskID"];
                this.columnBudgetID = base.Columns["BudgetID"];
                this.columnMaskValue = base.Columns["MaskValue"];
                this.columnMaskName = base.Columns["MaskName"];
                this.columnAreaErosionRaw = base.Columns["AreaErosionRaw"];
                this.columnAreaDepositionRaw = base.Columns["AreaDepositionRaw"];
                this.columnAreaErosionThresholded = base.Columns["AreaErosionThresholded"];
                this.columnAreaDepositionThresholded = base.Columns["AreaDepositionThresholded"];
                this.columnVolumeErosionRaw = base.Columns["VolumeErosionRaw"];
                this.columnVolumeDepositionRaw = base.Columns["VolumeDepositionRaw"];
                this.columnVolumeErosionThresholded = base.Columns["VolumeErosionThresholded"];
                this.columnVolumeDepositionThresholded = base.Columns["VolumeDepositionThresholded"];
                this.columnVolumeErosionError = base.Columns["VolumeErosionError"];
                this.columnVolumeDepositionError = base.Columns["VolumeDepositionError"];
                this.columnAreaChartPath = base.Columns["AreaChartPath"];
                this.columnVolumeChartPath = base.Columns["VolumeChartPath"];
                this.columnSummaryXMLPath = base.Columns["SummaryXMLPath"];
                this.columnCSVFileName = base.Columns["CSVFileName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnMaskID = new global::System.Data.DataColumn("MaskID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaskID);
                this.columnBudgetID = new global::System.Data.DataColumn("BudgetID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudgetID);
                this.columnMaskValue = new global::System.Data.DataColumn("MaskValue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaskValue);
                this.columnMaskName = new global::System.Data.DataColumn("MaskName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaskName);
                this.columnAreaErosionRaw = new global::System.Data.DataColumn("AreaErosionRaw", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaErosionRaw);
                this.columnAreaDepositionRaw = new global::System.Data.DataColumn("AreaDepositionRaw", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaDepositionRaw);
                this.columnAreaErosionThresholded = new global::System.Data.DataColumn("AreaErosionThresholded", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaErosionThresholded);
                this.columnAreaDepositionThresholded = new global::System.Data.DataColumn("AreaDepositionThresholded", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaDepositionThresholded);
                this.columnVolumeErosionRaw = new global::System.Data.DataColumn("VolumeErosionRaw", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumeErosionRaw);
                this.columnVolumeDepositionRaw = new global::System.Data.DataColumn("VolumeDepositionRaw", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumeDepositionRaw);
                this.columnVolumeErosionThresholded = new global::System.Data.DataColumn("VolumeErosionThresholded", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumeErosionThresholded);
                this.columnVolumeDepositionThresholded = new global::System.Data.DataColumn("VolumeDepositionThresholded", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumeDepositionThresholded);
                this.columnVolumeErosionError = new global::System.Data.DataColumn("VolumeErosionError", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumeErosionError);
                this.columnVolumeDepositionError = new global::System.Data.DataColumn("VolumeDepositionError", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumeDepositionError);
                this.columnAreaChartPath = new global::System.Data.DataColumn("AreaChartPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaChartPath);
                this.columnVolumeChartPath = new global::System.Data.DataColumn("VolumeChartPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumeChartPath);
                this.columnSummaryXMLPath = new global::System.Data.DataColumn("SummaryXMLPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSummaryXMLPath);
                this.columnCSVFileName = new global::System.Data.DataColumn("CSVFileName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSVFileName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMaskID}, false));
                this.columnMaskID.AutoIncrement = true;
                this.columnMaskID.AutoIncrementSeed = 1;
                this.columnMaskID.AllowDBNull = false;
                this.columnMaskID.ReadOnly = true;
                this.columnMaskID.Unique = true;
                this.columnBudgetID.AllowDBNull = false;
                this.columnBudgetID.ReadOnly = true;
                this.columnMaskName.AllowDBNull = false;
                this.columnMaskName.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BSMasksRow NewBSMasksRow() {
                return ((BSMasksRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BSMasksRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BSMasksRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BSMasksRowChanged != null)) {
                    this.BSMasksRowChanged(this, new BSMasksRowChangeEvent(((BSMasksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BSMasksRowChanging != null)) {
                    this.BSMasksRowChanging(this, new BSMasksRowChangeEvent(((BSMasksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BSMasksRowDeleted != null)) {
                    this.BSMasksRowDeleted(this, new BSMasksRowChangeEvent(((BSMasksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BSMasksRowDeleting != null)) {
                    this.BSMasksRowDeleting(this, new BSMasksRowChangeEvent(((BSMasksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBSMasksRow(BSMasksRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectDS ds = new ProjectDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BSMasksDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AOIsDataTable : global::System.Data.TypedTableBase<AOIsRow> {
            
            private global::System.Data.DataColumn columnAOIID;
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnSource;
            
            private global::System.Data.DataColumn columnOriginalSource;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AOIsDataTable() {
                this.TableName = "AOIs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AOIsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AOIsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AOIIDColumn {
                get {
                    return this.columnAOIID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SourceColumn {
                get {
                    return this.columnSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalSourceColumn {
                get {
                    return this.columnOriginalSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AOIsRow this[int index] {
                get {
                    return ((AOIsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AOIsRowChangeEventHandler AOIsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AOIsRowChangeEventHandler AOIsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AOIsRowChangeEventHandler AOIsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AOIsRowChangeEventHandler AOIsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAOIsRow(AOIsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AOIsRow AddAOIsRow(ProjectRow parentProjectRowByFK_Project_AOIs, string Name, string Source, string OriginalSource) {
                AOIsRow rowAOIsRow = ((AOIsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Name,
                        Source,
                        OriginalSource};
                if ((parentProjectRowByFK_Project_AOIs != null)) {
                    columnValuesArray[1] = parentProjectRowByFK_Project_AOIs[0];
                }
                rowAOIsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAOIsRow);
                return rowAOIsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AOIsDataTable cln = ((AOIsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AOIsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAOIID = base.Columns["AOIID"];
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnName = base.Columns["Name"];
                this.columnSource = base.Columns["Source"];
                this.columnOriginalSource = base.Columns["OriginalSource"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAOIID = new global::System.Data.DataColumn("AOIID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAOIID);
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnSource = new global::System.Data.DataColumn("Source", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSource);
                this.columnOriginalSource = new global::System.Data.DataColumn("OriginalSource", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalSource);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnAOIID}, false));
                this.columnAOIID.AutoIncrement = true;
                this.columnAOIID.AutoIncrementSeed = 1;
                this.columnAOIID.AllowDBNull = false;
                this.columnAOIID.Unique = true;
                this.columnProjectID.AllowDBNull = false;
                this.columnProjectID.ReadOnly = true;
                this.columnName.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AOIsRow NewAOIsRow() {
                return ((AOIsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AOIsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AOIsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AOIsRowChanged != null)) {
                    this.AOIsRowChanged(this, new AOIsRowChangeEvent(((AOIsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AOIsRowChanging != null)) {
                    this.AOIsRowChanging(this, new AOIsRowChangeEvent(((AOIsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AOIsRowDeleted != null)) {
                    this.AOIsRowDeleted(this, new AOIsRowChangeEvent(((AOIsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AOIsRowDeleting != null)) {
                    this.AOIsRowDeleting(this, new AOIsRowChangeEvent(((AOIsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAOIsRow(AOIsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectDS ds = new ProjectDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AOIsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WaterSurfacesDataTable : global::System.Data.TypedTableBase<WaterSurfacesRow> {
            
            private global::System.Data.DataColumn columnWaterSurfaceID;
            
            private global::System.Data.DataColumn columnElevation;
            
            private global::System.Data.DataColumn columnSource;
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WaterSurfacesDataTable() {
                this.TableName = "WaterSurfaces";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WaterSurfacesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected WaterSurfacesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaterSurfaceIDColumn {
                get {
                    return this.columnWaterSurfaceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ElevationColumn {
                get {
                    return this.columnElevation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SourceColumn {
                get {
                    return this.columnSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WaterSurfacesRow this[int index] {
                get {
                    return ((WaterSurfacesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WaterSurfacesRowChangeEventHandler WaterSurfacesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WaterSurfacesRowChangeEventHandler WaterSurfacesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WaterSurfacesRowChangeEventHandler WaterSurfacesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WaterSurfacesRowChangeEventHandler WaterSurfacesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddWaterSurfacesRow(WaterSurfacesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WaterSurfacesRow AddWaterSurfacesRow(double Elevation, string Source, string Name) {
                WaterSurfacesRow rowWaterSurfacesRow = ((WaterSurfacesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Elevation,
                        Source,
                        Name};
                rowWaterSurfacesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWaterSurfacesRow);
                return rowWaterSurfacesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WaterSurfacesDataTable cln = ((WaterSurfacesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WaterSurfacesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnWaterSurfaceID = base.Columns["WaterSurfaceID"];
                this.columnElevation = base.Columns["Elevation"];
                this.columnSource = base.Columns["Source"];
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnWaterSurfaceID = new global::System.Data.DataColumn("WaterSurfaceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaterSurfaceID);
                this.columnElevation = new global::System.Data.DataColumn("Elevation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElevation);
                this.columnSource = new global::System.Data.DataColumn("Source", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSource);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWaterSurfaceID}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnName}, false));
                this.columnWaterSurfaceID.AutoIncrement = true;
                this.columnWaterSurfaceID.AutoIncrementSeed = 1;
                this.columnWaterSurfaceID.ReadOnly = true;
                this.columnWaterSurfaceID.Unique = true;
                this.columnSource.MaxLength = 256;
                this.columnName.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WaterSurfacesRow NewWaterSurfacesRow() {
                return ((WaterSurfacesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WaterSurfacesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WaterSurfacesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WaterSurfacesRowChanged != null)) {
                    this.WaterSurfacesRowChanged(this, new WaterSurfacesRowChangeEvent(((WaterSurfacesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WaterSurfacesRowChanging != null)) {
                    this.WaterSurfacesRowChanging(this, new WaterSurfacesRowChangeEvent(((WaterSurfacesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WaterSurfacesRowDeleted != null)) {
                    this.WaterSurfacesRowDeleted(this, new WaterSurfacesRowChangeEvent(((WaterSurfacesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WaterSurfacesRowDeleting != null)) {
                    this.WaterSurfacesRowDeleting(this, new WaterSurfacesRowChangeEvent(((WaterSurfacesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveWaterSurfacesRow(WaterSurfacesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectDS ds = new ProjectDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WaterSurfacesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ReservoirAnalysisDataTable : global::System.Data.TypedTableBase<ReservoirAnalysisRow> {
            
            private global::System.Data.DataColumn columnReservoirAnalysisID;
            
            private global::System.Data.DataColumn columnDEMSurveyID;
            
            private global::System.Data.DataColumn columnErrorID;
            
            private global::System.Data.DataColumn columnWaterSurfaceID;
            
            private global::System.Data.DataColumn columnIsOriginal;
            
            private global::System.Data.DataColumn columnMaxDepth;
            
            private global::System.Data.DataColumn columnMaxDepthPM;
            
            private global::System.Data.DataColumn columnMeanDepth;
            
            private global::System.Data.DataColumn columnRawArea;
            
            private global::System.Data.DataColumn columnMinArea;
            
            private global::System.Data.DataColumn columnRawVolume;
            
            private global::System.Data.DataColumn columnMinVolume;
            
            private global::System.Data.DataColumn columnMaxArea;
            
            private global::System.Data.DataColumn columnMaxVolume;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ReservoirAnalysisDataTable() {
                this.TableName = "ReservoirAnalysis";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ReservoirAnalysisDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ReservoirAnalysisDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReservoirAnalysisIDColumn {
                get {
                    return this.columnReservoirAnalysisID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEMSurveyIDColumn {
                get {
                    return this.columnDEMSurveyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ErrorIDColumn {
                get {
                    return this.columnErrorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaterSurfaceIDColumn {
                get {
                    return this.columnWaterSurfaceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsOriginalColumn {
                get {
                    return this.columnIsOriginal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDepthColumn {
                get {
                    return this.columnMaxDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDepthPMColumn {
                get {
                    return this.columnMaxDepthPM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeanDepthColumn {
                get {
                    return this.columnMeanDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RawAreaColumn {
                get {
                    return this.columnRawArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MinAreaColumn {
                get {
                    return this.columnMinArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RawVolumeColumn {
                get {
                    return this.columnRawVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MinVolumeColumn {
                get {
                    return this.columnMinVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxAreaColumn {
                get {
                    return this.columnMaxArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxVolumeColumn {
                get {
                    return this.columnMaxVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ReservoirAnalysisRow this[int index] {
                get {
                    return ((ReservoirAnalysisRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ReservoirAnalysisRowChangeEventHandler ReservoirAnalysisRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ReservoirAnalysisRowChangeEventHandler ReservoirAnalysisRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ReservoirAnalysisRowChangeEventHandler ReservoirAnalysisRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ReservoirAnalysisRowChangeEventHandler ReservoirAnalysisRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddReservoirAnalysisRow(ReservoirAnalysisRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ReservoirAnalysisRow AddReservoirAnalysisRow(DEMSurveyRow parentDEMSurveyRowByFK_DEMSurvey_Reservoir, ErrorSurfaceRow parentErrorSurfaceRowByFK_ErrorTable_Reservoir, WaterSurfacesRow parentWaterSurfacesRowByWaterSurfaces_Reservoir, bool IsOriginal, double MaxDepth, double MaxDepthPM, double MeanDepth, double RawArea, double MinArea, double RawVolume, double MinVolume, double MaxArea, double MaxVolume) {
                ReservoirAnalysisRow rowReservoirAnalysisRow = ((ReservoirAnalysisRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        null,
                        IsOriginal,
                        MaxDepth,
                        MaxDepthPM,
                        MeanDepth,
                        RawArea,
                        MinArea,
                        RawVolume,
                        MinVolume,
                        MaxArea,
                        MaxVolume};
                if ((parentDEMSurveyRowByFK_DEMSurvey_Reservoir != null)) {
                    columnValuesArray[1] = parentDEMSurveyRowByFK_DEMSurvey_Reservoir[0];
                }
                if ((parentErrorSurfaceRowByFK_ErrorTable_Reservoir != null)) {
                    columnValuesArray[2] = parentErrorSurfaceRowByFK_ErrorTable_Reservoir[0];
                }
                if ((parentWaterSurfacesRowByWaterSurfaces_Reservoir != null)) {
                    columnValuesArray[3] = parentWaterSurfacesRowByWaterSurfaces_Reservoir[0];
                }
                rowReservoirAnalysisRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReservoirAnalysisRow);
                return rowReservoirAnalysisRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ReservoirAnalysisDataTable cln = ((ReservoirAnalysisDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ReservoirAnalysisDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnReservoirAnalysisID = base.Columns["ReservoirAnalysisID"];
                this.columnDEMSurveyID = base.Columns["DEMSurveyID"];
                this.columnErrorID = base.Columns["ErrorID"];
                this.columnWaterSurfaceID = base.Columns["WaterSurfaceID"];
                this.columnIsOriginal = base.Columns["IsOriginal"];
                this.columnMaxDepth = base.Columns["MaxDepth"];
                this.columnMaxDepthPM = base.Columns["MaxDepthPM"];
                this.columnMeanDepth = base.Columns["MeanDepth"];
                this.columnRawArea = base.Columns["RawArea"];
                this.columnMinArea = base.Columns["MinArea"];
                this.columnRawVolume = base.Columns["RawVolume"];
                this.columnMinVolume = base.Columns["MinVolume"];
                this.columnMaxArea = base.Columns["MaxArea"];
                this.columnMaxVolume = base.Columns["MaxVolume"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnReservoirAnalysisID = new global::System.Data.DataColumn("ReservoirAnalysisID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReservoirAnalysisID);
                this.columnDEMSurveyID = new global::System.Data.DataColumn("DEMSurveyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEMSurveyID);
                this.columnErrorID = new global::System.Data.DataColumn("ErrorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnErrorID);
                this.columnWaterSurfaceID = new global::System.Data.DataColumn("WaterSurfaceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaterSurfaceID);
                this.columnIsOriginal = new global::System.Data.DataColumn("IsOriginal", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOriginal);
                this.columnMaxDepth = new global::System.Data.DataColumn("MaxDepth", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDepth);
                this.columnMaxDepthPM = new global::System.Data.DataColumn("MaxDepthPM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDepthPM);
                this.columnMeanDepth = new global::System.Data.DataColumn("MeanDepth", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeanDepth);
                this.columnRawArea = new global::System.Data.DataColumn("RawArea", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRawArea);
                this.columnMinArea = new global::System.Data.DataColumn("MinArea", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinArea);
                this.columnRawVolume = new global::System.Data.DataColumn("RawVolume", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRawVolume);
                this.columnMinVolume = new global::System.Data.DataColumn("MinVolume", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinVolume);
                this.columnMaxArea = new global::System.Data.DataColumn("MaxArea", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxArea);
                this.columnMaxVolume = new global::System.Data.DataColumn("MaxVolume", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxVolume);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnReservoirAnalysisID}, false));
                this.columnReservoirAnalysisID.AutoIncrement = true;
                this.columnReservoirAnalysisID.AutoIncrementSeed = 1;
                this.columnReservoirAnalysisID.AllowDBNull = false;
                this.columnReservoirAnalysisID.ReadOnly = true;
                this.columnReservoirAnalysisID.Unique = true;
                this.columnDEMSurveyID.AllowDBNull = false;
                this.columnErrorID.AllowDBNull = false;
                this.columnWaterSurfaceID.AllowDBNull = false;
                this.columnIsOriginal.AllowDBNull = false;
                this.columnIsOriginal.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ReservoirAnalysisRow NewReservoirAnalysisRow() {
                return ((ReservoirAnalysisRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ReservoirAnalysisRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ReservoirAnalysisRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ReservoirAnalysisRowChanged != null)) {
                    this.ReservoirAnalysisRowChanged(this, new ReservoirAnalysisRowChangeEvent(((ReservoirAnalysisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ReservoirAnalysisRowChanging != null)) {
                    this.ReservoirAnalysisRowChanging(this, new ReservoirAnalysisRowChangeEvent(((ReservoirAnalysisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ReservoirAnalysisRowDeleted != null)) {
                    this.ReservoirAnalysisRowDeleted(this, new ReservoirAnalysisRowChangeEvent(((ReservoirAnalysisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ReservoirAnalysisRowDeleting != null)) {
                    this.ReservoirAnalysisRowDeleting(this, new ReservoirAnalysisRowChangeEvent(((ReservoirAnalysisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveReservoirAnalysisRow(ReservoirAnalysisRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectDS ds = new ProjectDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ReservoirAnalysisDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ReservoirDataTable : global::System.Data.TypedTableBase<ReservoirRow> {
            
            private global::System.Data.DataColumn columnReservoirID;
            
            private global::System.Data.DataColumn columnReservoirAnalysisID;
            
            private global::System.Data.DataColumn columnBathRaster;
            
            private global::System.Data.DataColumn columnDepthRaster;
            
            private global::System.Data.DataColumn columnVolumeRaster;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnStatsTable;
            
            private global::System.Data.DataColumn columnMaskRaster;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ReservoirDataTable() {
                this.TableName = "Reservoir";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ReservoirDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ReservoirDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReservoirIDColumn {
                get {
                    return this.columnReservoirID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReservoirAnalysisIDColumn {
                get {
                    return this.columnReservoirAnalysisID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BathRasterColumn {
                get {
                    return this.columnBathRaster;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DepthRasterColumn {
                get {
                    return this.columnDepthRaster;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumeRasterColumn {
                get {
                    return this.columnVolumeRaster;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatsTableColumn {
                get {
                    return this.columnStatsTable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaskRasterColumn {
                get {
                    return this.columnMaskRaster;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ReservoirRow this[int index] {
                get {
                    return ((ReservoirRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ReservoirRowChangeEventHandler ReservoirRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ReservoirRowChangeEventHandler ReservoirRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ReservoirRowChangeEventHandler ReservoirRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ReservoirRowChangeEventHandler ReservoirRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddReservoirRow(ReservoirRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ReservoirRow AddReservoirRow(ReservoirAnalysisRow parentReservoirAnalysisRowByFK_ReservoirAnalysis_Reservoir, string BathRaster, string DepthRaster, string VolumeRaster, string Type, string StatsTable, string MaskRaster) {
                ReservoirRow rowReservoirRow = ((ReservoirRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        BathRaster,
                        DepthRaster,
                        VolumeRaster,
                        Type,
                        StatsTable,
                        MaskRaster};
                if ((parentReservoirAnalysisRowByFK_ReservoirAnalysis_Reservoir != null)) {
                    columnValuesArray[1] = parentReservoirAnalysisRowByFK_ReservoirAnalysis_Reservoir[0];
                }
                rowReservoirRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReservoirRow);
                return rowReservoirRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ReservoirDataTable cln = ((ReservoirDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ReservoirDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnReservoirID = base.Columns["ReservoirID"];
                this.columnReservoirAnalysisID = base.Columns["ReservoirAnalysisID"];
                this.columnBathRaster = base.Columns["BathRaster"];
                this.columnDepthRaster = base.Columns["DepthRaster"];
                this.columnVolumeRaster = base.Columns["VolumeRaster"];
                this.columnType = base.Columns["Type"];
                this.columnStatsTable = base.Columns["StatsTable"];
                this.columnMaskRaster = base.Columns["MaskRaster"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnReservoirID = new global::System.Data.DataColumn("ReservoirID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReservoirID);
                this.columnReservoirAnalysisID = new global::System.Data.DataColumn("ReservoirAnalysisID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReservoirAnalysisID);
                this.columnBathRaster = new global::System.Data.DataColumn("BathRaster", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBathRaster);
                this.columnDepthRaster = new global::System.Data.DataColumn("DepthRaster", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepthRaster);
                this.columnVolumeRaster = new global::System.Data.DataColumn("VolumeRaster", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumeRaster);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnStatsTable = new global::System.Data.DataColumn("StatsTable", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatsTable);
                this.columnMaskRaster = new global::System.Data.DataColumn("MaskRaster", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaskRaster);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnReservoirID}, false));
                this.columnReservoirID.AutoIncrement = true;
                this.columnReservoirID.AutoIncrementSeed = 1;
                this.columnReservoirID.AllowDBNull = false;
                this.columnReservoirID.ReadOnly = true;
                this.columnReservoirID.Unique = true;
                this.columnReservoirAnalysisID.AllowDBNull = false;
                this.columnReservoirAnalysisID.ReadOnly = true;
                this.columnBathRaster.AllowDBNull = false;
                this.columnDepthRaster.AllowDBNull = false;
                this.columnVolumeRaster.AllowDBNull = false;
                this.columnType.AllowDBNull = false;
                this.columnType.ReadOnly = true;
                this.columnStatsTable.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ReservoirRow NewReservoirRow() {
                return ((ReservoirRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ReservoirRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ReservoirRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ReservoirRowChanged != null)) {
                    this.ReservoirRowChanged(this, new ReservoirRowChangeEvent(((ReservoirRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ReservoirRowChanging != null)) {
                    this.ReservoirRowChanging(this, new ReservoirRowChangeEvent(((ReservoirRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ReservoirRowDeleted != null)) {
                    this.ReservoirRowDeleted(this, new ReservoirRowChangeEvent(((ReservoirRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ReservoirRowDeleting != null)) {
                    this.ReservoirRowDeleting(this, new ReservoirRowChangeEvent(((ReservoirRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveReservoirRow(ReservoirRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectDS ds = new ProjectDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ReservoirDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProjectRow : global::System.Data.DataRow {
            
            private ProjectDataTable tableProject;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProjectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProject = ((ProjectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableProject.ProjectIDColumn]));
                }
                set {
                    this[this.tableProject.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableProject.NameColumn]));
                }
                set {
                    this[this.tableProject.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableProject.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'Project\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProject.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OutputDirectory {
                get {
                    return ((string)(this[this.tableProject.OutputDirectoryColumn]));
                }
                set {
                    this[this.tableProject.OutputDirectoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProject.DateCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateCreated\' in table \'Project\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProject.DateCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GCDVersion {
                get {
                    try {
                        return ((string)(this[this.tableProject.GCDVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GCDVersion\' in table \'Project\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProject.GCDVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Precision {
                get {
                    return ((double)(this[this.tableProject.PrecisionColumn]));
                }
                set {
                    this[this.tableProject.PrecisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DisplayUnits {
                get {
                    if (this.IsDisplayUnitsNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableProject.DisplayUnitsColumn]));
                    }
                }
                set {
                    this[this.tableProject.DisplayUnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CoordinateSystem {
                get {
                    if (this.IsCoordinateSystemNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableProject.CoordinateSystemColumn]));
                    }
                }
                set {
                    this[this.tableProject.CoordinateSystemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProjectType {
                get {
                    if (this.IsProjectTypeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableProject.ProjectTypeColumn]));
                    }
                }
                set {
                    this[this.tableProject.ProjectTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableProject.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableProject.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableProject.DateCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateCreatedNull() {
                this[this.tableProject.DateCreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGCDVersionNull() {
                return this.IsNull(this.tableProject.GCDVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGCDVersionNull() {
                this[this.tableProject.GCDVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDisplayUnitsNull() {
                return this.IsNull(this.tableProject.DisplayUnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDisplayUnitsNull() {
                this[this.tableProject.DisplayUnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoordinateSystemNull() {
                return this.IsNull(this.tableProject.CoordinateSystemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoordinateSystemNull() {
                this[this.tableProject.CoordinateSystemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProjectTypeNull() {
                return this.IsNull(this.tableProject.ProjectTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProjectTypeNull() {
                this[this.tableProject.ProjectTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEMSurveyRow[] GetDEMSurveyRows() {
                if ((this.Table.ChildRelations["FK_Project_DEMSurvey"] == null)) {
                    return new DEMSurveyRow[0];
                }
                else {
                    return ((DEMSurveyRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Project_DEMSurvey"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DoDsRow[] GetDoDsRows() {
                if ((this.Table.ChildRelations["FK_Project_DoDTable"] == null)) {
                    return new DoDsRow[0];
                }
                else {
                    return ((DoDsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Project_DoDTable"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AOIsRow[] GetAOIsRows() {
                if ((this.Table.ChildRelations["FK_Project_AOIs"] == null)) {
                    return new AOIsRow[0];
                }
                else {
                    return ((AOIsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Project_AOIs"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DEMSurveyRow : global::System.Data.DataRow {
            
            private DEMSurveyDataTable tableDEMSurvey;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DEMSurveyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDEMSurvey = ((DEMSurveyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DEMSurveyID {
                get {
                    return ((int)(this[this.tableDEMSurvey.DEMSurveyIDColumn]));
                }
                set {
                    this[this.tableDEMSurvey.DEMSurveyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableDEMSurvey.NameColumn]));
                }
                set {
                    this[this.tableDEMSurvey.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Source {
                get {
                    return ((string)(this[this.tableDEMSurvey.SourceColumn]));
                }
                set {
                    this[this.tableDEMSurvey.SourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SingleMethodType {
                get {
                    try {
                        return ((string)(this[this.tableDEMSurvey.SingleMethodTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SingleMethodType\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.SingleMethodTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MethodMask {
                get {
                    try {
                        return ((string)(this[this.tableDEMSurvey.MethodMaskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MethodMask\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.MethodMaskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SurveyDate {
                get {
                    try {
                        return ((string)(this[this.tableDEMSurvey.SurveyDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SurveyDate\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.SurveyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableDEMSurvey.ProjectIDColumn]));
                }
                set {
                    this[this.tableDEMSurvey.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SingleMethod {
                get {
                    try {
                        return ((bool)(this[this.tableDEMSurvey.SingleMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SingleMethod\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.SingleMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MultiMethod {
                get {
                    try {
                        return ((bool)(this[this.tableDEMSurvey.MultiMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MultiMethod\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.MultiMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MethodMaskField {
                get {
                    try {
                        return ((string)(this[this.tableDEMSurvey.MethodMaskFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MethodMaskField\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.MethodMaskFieldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CellResolution {
                get {
                    try {
                        return ((double)(this[this.tableDEMSurvey.CellResolutionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CellResolution\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.CellResolutionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ExtentLeft {
                get {
                    try {
                        return ((double)(this[this.tableDEMSurvey.ExtentLeftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtentLeft\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.ExtentLeftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ExtentBottom {
                get {
                    try {
                        return ((double)(this[this.tableDEMSurvey.ExtentBottomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtentBottom\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.ExtentBottomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ExtentRight {
                get {
                    try {
                        return ((double)(this[this.tableDEMSurvey.ExtentRightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtentRight\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.ExtentRightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ExtentTop {
                get {
                    try {
                        return ((double)(this[this.tableDEMSurvey.ExtentTopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtentTop\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.ExtentTopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginalExtentLeft {
                get {
                    try {
                        return ((double)(this[this.tableDEMSurvey.OriginalExtentLeftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalExtentLeft\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.OriginalExtentLeftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginalExtentBottom {
                get {
                    try {
                        return ((double)(this[this.tableDEMSurvey.OriginalExtentBottomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalExtentBottom\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.OriginalExtentBottomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginalExtentRight {
                get {
                    try {
                        return ((double)(this[this.tableDEMSurvey.OriginalExtentRightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalExtentRight\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.OriginalExtentRightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginalExtentTop {
                get {
                    try {
                        return ((double)(this[this.tableDEMSurvey.OriginalExtentTopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalExtentTop\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.OriginalExtentTopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OriginalSource {
                get {
                    try {
                        return ((string)(this[this.tableDEMSurvey.OriginalSourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalSource\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.OriginalSourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OriginalComputer {
                get {
                    try {
                        return ((string)(this[this.tableDEMSurvey.OriginalComputerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalComputer\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.OriginalComputerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginalCellSize {
                get {
                    try {
                        return ((double)(this[this.tableDEMSurvey.OriginalCellSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalCellSize\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.OriginalCellSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ushort SurveyYear {
                get {
                    try {
                        return ((ushort)(this[this.tableDEMSurvey.SurveyYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SurveyYear\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.SurveyYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte SurveyMonth {
                get {
                    try {
                        return ((byte)(this[this.tableDEMSurvey.SurveyMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SurveyMonth\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.SurveyMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte SurveyDay {
                get {
                    try {
                        return ((byte)(this[this.tableDEMSurvey.SurveyDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SurveyDay\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.SurveyDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte SurveyHour {
                get {
                    try {
                        return ((byte)(this[this.tableDEMSurvey.SurveyHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SurveyHour\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.SurveyHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte SurveyMin {
                get {
                    try {
                        return ((byte)(this[this.tableDEMSurvey.SurveyMinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SurveyMin\' in table \'DEMSurvey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEMSurvey.SurveyMinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectRow ProjectRow {
                get {
                    return ((ProjectRow)(this.GetParentRow(this.Table.ParentRelations["FK_Project_DEMSurvey"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Project_DEMSurvey"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSingleMethodTypeNull() {
                return this.IsNull(this.tableDEMSurvey.SingleMethodTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSingleMethodTypeNull() {
                this[this.tableDEMSurvey.SingleMethodTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMethodMaskNull() {
                return this.IsNull(this.tableDEMSurvey.MethodMaskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMethodMaskNull() {
                this[this.tableDEMSurvey.MethodMaskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSurveyDateNull() {
                return this.IsNull(this.tableDEMSurvey.SurveyDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSurveyDateNull() {
                this[this.tableDEMSurvey.SurveyDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSingleMethodNull() {
                return this.IsNull(this.tableDEMSurvey.SingleMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSingleMethodNull() {
                this[this.tableDEMSurvey.SingleMethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMultiMethodNull() {
                return this.IsNull(this.tableDEMSurvey.MultiMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMultiMethodNull() {
                this[this.tableDEMSurvey.MultiMethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMethodMaskFieldNull() {
                return this.IsNull(this.tableDEMSurvey.MethodMaskFieldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMethodMaskFieldNull() {
                this[this.tableDEMSurvey.MethodMaskFieldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCellResolutionNull() {
                return this.IsNull(this.tableDEMSurvey.CellResolutionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCellResolutionNull() {
                this[this.tableDEMSurvey.CellResolutionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExtentLeftNull() {
                return this.IsNull(this.tableDEMSurvey.ExtentLeftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExtentLeftNull() {
                this[this.tableDEMSurvey.ExtentLeftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExtentBottomNull() {
                return this.IsNull(this.tableDEMSurvey.ExtentBottomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExtentBottomNull() {
                this[this.tableDEMSurvey.ExtentBottomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExtentRightNull() {
                return this.IsNull(this.tableDEMSurvey.ExtentRightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExtentRightNull() {
                this[this.tableDEMSurvey.ExtentRightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExtentTopNull() {
                return this.IsNull(this.tableDEMSurvey.ExtentTopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExtentTopNull() {
                this[this.tableDEMSurvey.ExtentTopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginalExtentLeftNull() {
                return this.IsNull(this.tableDEMSurvey.OriginalExtentLeftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginalExtentLeftNull() {
                this[this.tableDEMSurvey.OriginalExtentLeftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginalExtentBottomNull() {
                return this.IsNull(this.tableDEMSurvey.OriginalExtentBottomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginalExtentBottomNull() {
                this[this.tableDEMSurvey.OriginalExtentBottomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginalExtentRightNull() {
                return this.IsNull(this.tableDEMSurvey.OriginalExtentRightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginalExtentRightNull() {
                this[this.tableDEMSurvey.OriginalExtentRightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginalExtentTopNull() {
                return this.IsNull(this.tableDEMSurvey.OriginalExtentTopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginalExtentTopNull() {
                this[this.tableDEMSurvey.OriginalExtentTopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginalSourceNull() {
                return this.IsNull(this.tableDEMSurvey.OriginalSourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginalSourceNull() {
                this[this.tableDEMSurvey.OriginalSourceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginalComputerNull() {
                return this.IsNull(this.tableDEMSurvey.OriginalComputerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginalComputerNull() {
                this[this.tableDEMSurvey.OriginalComputerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginalCellSizeNull() {
                return this.IsNull(this.tableDEMSurvey.OriginalCellSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginalCellSizeNull() {
                this[this.tableDEMSurvey.OriginalCellSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSurveyYearNull() {
                return this.IsNull(this.tableDEMSurvey.SurveyYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSurveyYearNull() {
                this[this.tableDEMSurvey.SurveyYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSurveyMonthNull() {
                return this.IsNull(this.tableDEMSurvey.SurveyMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSurveyMonthNull() {
                this[this.tableDEMSurvey.SurveyMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSurveyDayNull() {
                return this.IsNull(this.tableDEMSurvey.SurveyDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSurveyDayNull() {
                this[this.tableDEMSurvey.SurveyDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSurveyHourNull() {
                return this.IsNull(this.tableDEMSurvey.SurveyHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSurveyHourNull() {
                this[this.tableDEMSurvey.SurveyHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSurveyMinNull() {
                return this.IsNull(this.tableDEMSurvey.SurveyMinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSurveyMinNull() {
                this[this.tableDEMSurvey.SurveyMinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AssociatedSurfaceRow[] GetAssociatedSurfaceRows() {
                if ((this.Table.ChildRelations["FK_DEMSurvey_AssociatedSurface"] == null)) {
                    return new AssociatedSurfaceRow[0];
                }
                else {
                    return ((AssociatedSurfaceRow[])(base.GetChildRows(this.Table.ChildRelations["FK_DEMSurvey_AssociatedSurface"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ErrorSurfaceRow[] GetErrorSurfaceRows() {
                if ((this.Table.ChildRelations["DEMSurvey_ErrorTable"] == null)) {
                    return new ErrorSurfaceRow[0];
                }
                else {
                    return ((ErrorSurfaceRow[])(base.GetChildRows(this.Table.ChildRelations["DEMSurvey_ErrorTable"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ReservoirAnalysisRow[] GetReservoirAnalysisRows() {
                if ((this.Table.ChildRelations["FK_DEMSurvey_Reservoir"] == null)) {
                    return new ReservoirAnalysisRow[0];
                }
                else {
                    return ((ReservoirAnalysisRow[])(base.GetChildRows(this.Table.ChildRelations["FK_DEMSurvey_Reservoir"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AssociatedSurfaceRow : global::System.Data.DataRow {
            
            private AssociatedSurfaceDataTable tableAssociatedSurface;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AssociatedSurfaceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAssociatedSurface = ((AssociatedSurfaceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AssociatedSurfaceID {
                get {
                    return ((int)(this[this.tableAssociatedSurface.AssociatedSurfaceIDColumn]));
                }
                set {
                    this[this.tableAssociatedSurface.AssociatedSurfaceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DEMSurveyID {
                get {
                    return ((int)(this[this.tableAssociatedSurface.DEMSurveyIDColumn]));
                }
                set {
                    this[this.tableAssociatedSurface.DEMSurveyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableAssociatedSurface.NameColumn]));
                }
                set {
                    this[this.tableAssociatedSurface.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Source {
                get {
                    return ((string)(this[this.tableAssociatedSurface.SourceColumn]));
                }
                set {
                    this[this.tableAssociatedSurface.SourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableAssociatedSurface.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'AssociatedSurface\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAssociatedSurface.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OriginalSource {
                get {
                    try {
                        return ((string)(this[this.tableAssociatedSurface.OriginalSourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalSource\' in table \'AssociatedSurface\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAssociatedSurface.OriginalSourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEMSurveyRow DEMSurveyRow {
                get {
                    return ((DEMSurveyRow)(this.GetParentRow(this.Table.ParentRelations["FK_DEMSurvey_AssociatedSurface"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DEMSurvey_AssociatedSurface"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeNull() {
                return this.IsNull(this.tableAssociatedSurface.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeNull() {
                this[this.tableAssociatedSurface.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginalSourceNull() {
                return this.IsNull(this.tableAssociatedSurface.OriginalSourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginalSourceNull() {
                this[this.tableAssociatedSurface.OriginalSourceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ErrorSurfaceRow : global::System.Data.DataRow {
            
            private ErrorSurfaceDataTable tableErrorSurface;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ErrorSurfaceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableErrorSurface = ((ErrorSurfaceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ErrorSurfaceID {
                get {
                    return ((int)(this[this.tableErrorSurface.ErrorSurfaceIDColumn]));
                }
                set {
                    this[this.tableErrorSurface.ErrorSurfaceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableErrorSurface.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'ErrorSurface\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableErrorSurface.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableErrorSurface.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'ErrorSurface\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableErrorSurface.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Source {
                get {
                    try {
                        return ((string)(this[this.tableErrorSurface.SourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Source\' in table \'ErrorSurface\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableErrorSurface.SourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DEMSurveyID {
                get {
                    try {
                        return ((int)(this[this.tableErrorSurface.DEMSurveyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEMSurveyID\' in table \'ErrorSurface\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableErrorSurface.DEMSurveyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEMSurveyRow DEMSurveyRow {
                get {
                    return ((DEMSurveyRow)(this.GetParentRow(this.Table.ParentRelations["DEMSurvey_ErrorTable"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["DEMSurvey_ErrorTable"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableErrorSurface.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableErrorSurface.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeNull() {
                return this.IsNull(this.tableErrorSurface.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeNull() {
                this[this.tableErrorSurface.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSourceNull() {
                return this.IsNull(this.tableErrorSurface.SourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSourceNull() {
                this[this.tableErrorSurface.SourceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDEMSurveyIDNull() {
                return this.IsNull(this.tableErrorSurface.DEMSurveyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDEMSurveyIDNull() {
                this[this.tableErrorSurface.DEMSurveyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MultiErrorPropertiesRow[] GetMultiErrorPropertiesRows() {
                if ((this.Table.ChildRelations["ErrorTable_MultiErrorProperties"] == null)) {
                    return new MultiErrorPropertiesRow[0];
                }
                else {
                    return ((MultiErrorPropertiesRow[])(base.GetChildRows(this.Table.ChildRelations["ErrorTable_MultiErrorProperties"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FISInputsRow[] GetFISInputsRows() {
                if ((this.Table.ChildRelations["FK_ErrorTable_FISInputs"] == null)) {
                    return new FISInputsRow[0];
                }
                else {
                    return ((FISInputsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ErrorTable_FISInputs"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ReservoirAnalysisRow[] GetReservoirAnalysisRows() {
                if ((this.Table.ChildRelations["FK_ErrorTable_Reservoir"] == null)) {
                    return new ReservoirAnalysisRow[0];
                }
                else {
                    return ((ReservoirAnalysisRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ErrorTable_Reservoir"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MultiErrorPropertiesRow : global::System.Data.DataRow {
            
            private MultiErrorPropertiesDataTable tableMultiErrorProperties;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MultiErrorPropertiesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMultiErrorProperties = ((MultiErrorPropertiesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MultiErrorID {
                get {
                    return ((int)(this[this.tableMultiErrorProperties.MultiErrorIDColumn]));
                }
                set {
                    this[this.tableMultiErrorProperties.MultiErrorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Method {
                get {
                    try {
                        return ((string)(this[this.tableMultiErrorProperties.MethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Method\' in table \'MultiErrorProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMultiErrorProperties.MethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string _Error {
                get {
                    try {
                        return ((string)(this[this.tableMultiErrorProperties.ErrorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Error\' in table \'MultiErrorProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMultiErrorProperties.ErrorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ErrorID {
                get {
                    try {
                        return ((int)(this[this.tableMultiErrorProperties.ErrorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ErrorID\' in table \'MultiErrorProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMultiErrorProperties.ErrorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ErrorType {
                get {
                    try {
                        return ((string)(this[this.tableMultiErrorProperties.ErrorTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ErrorType\' in table \'MultiErrorProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMultiErrorProperties.ErrorTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AssociatedSurfaceID {
                get {
                    try {
                        return ((int)(this[this.tableMultiErrorProperties.AssociatedSurfaceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssociatedSurfaceID\' in table \'MultiErrorProperties\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableMultiErrorProperties.AssociatedSurfaceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ErrorSurfaceRow ErrorSurfaceRow {
                get {
                    return ((ErrorSurfaceRow)(this.GetParentRow(this.Table.ParentRelations["ErrorTable_MultiErrorProperties"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ErrorTable_MultiErrorProperties"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMethodNull() {
                return this.IsNull(this.tableMultiErrorProperties.MethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMethodNull() {
                this[this.tableMultiErrorProperties.MethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_ErrorNull() {
                return this.IsNull(this.tableMultiErrorProperties.ErrorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_ErrorNull() {
                this[this.tableMultiErrorProperties.ErrorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsErrorIDNull() {
                return this.IsNull(this.tableMultiErrorProperties.ErrorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetErrorIDNull() {
                this[this.tableMultiErrorProperties.ErrorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsErrorTypeNull() {
                return this.IsNull(this.tableMultiErrorProperties.ErrorTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetErrorTypeNull() {
                this[this.tableMultiErrorProperties.ErrorTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssociatedSurfaceIDNull() {
                return this.IsNull(this.tableMultiErrorProperties.AssociatedSurfaceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssociatedSurfaceIDNull() {
                this[this.tableMultiErrorProperties.AssociatedSurfaceIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FISInputsRow : global::System.Data.DataRow {
            
            private FISInputsDataTable tableFISInputs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FISInputsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFISInputs = ((FISInputsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FISInputsID {
                get {
                    return ((int)(this[this.tableFISInputs.FISInputsIDColumn]));
                }
                set {
                    this[this.tableFISInputs.FISInputsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ErrorID {
                get {
                    return ((int)(this[this.tableFISInputs.ErrorIDColumn]));
                }
                set {
                    this[this.tableFISInputs.ErrorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FISInput {
                get {
                    try {
                        return ((string)(this[this.tableFISInputs.FISInputColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FISInput\' in table \'FISInputs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFISInputs.FISInputColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AssociatedSurface {
                get {
                    try {
                        return ((string)(this[this.tableFISInputs.AssociatedSurfaceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssociatedSurface\' in table \'FISInputs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFISInputs.AssociatedSurfaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FIS {
                get {
                    try {
                        return ((string)(this[this.tableFISInputs.FISColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FIS\' in table \'FISInputs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFISInputs.FISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ErrorSurfaceRow ErrorSurfaceRow {
                get {
                    return ((ErrorSurfaceRow)(this.GetParentRow(this.Table.ParentRelations["FK_ErrorTable_FISInputs"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ErrorTable_FISInputs"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFISInputNull() {
                return this.IsNull(this.tableFISInputs.FISInputColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFISInputNull() {
                this[this.tableFISInputs.FISInputColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssociatedSurfaceNull() {
                return this.IsNull(this.tableFISInputs.AssociatedSurfaceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssociatedSurfaceNull() {
                this[this.tableFISInputs.AssociatedSurfaceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFISNull() {
                return this.IsNull(this.tableFISInputs.FISColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFISNull() {
                this[this.tableFISInputs.FISColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DoDsRow : global::System.Data.DataRow {
            
            private DoDsDataTable tableDoDs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DoDsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDoDs = ((DoDsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DoDID {
                get {
                    return ((int)(this[this.tableDoDs.DoDIDColumn]));
                }
                set {
                    this[this.tableDoDs.DoDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableDoDs.NameColumn]));
                }
                set {
                    this[this.tableDoDs.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OutputFolder {
                get {
                    return ((string)(this[this.tableDoDs.OutputFolderColumn]));
                }
                set {
                    this[this.tableDoDs.OutputFolderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NewSurveyName {
                get {
                    return ((string)(this[this.tableDoDs.NewSurveyNameColumn]));
                }
                set {
                    this[this.tableDoDs.NewSurveyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OldSurveyName {
                get {
                    return ((string)(this[this.tableDoDs.OldSurveyNameColumn]));
                }
                set {
                    this[this.tableDoDs.OldSurveyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableDoDs.ProjectIDColumn]));
                }
                set {
                    this[this.tableDoDs.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NewErrorName {
                get {
                    try {
                        return ((string)(this[this.tableDoDs.NewErrorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewErrorName\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.NewErrorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OldErrorName {
                get {
                    try {
                        return ((string)(this[this.tableDoDs.OldErrorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OldErrorName\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.OldErrorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TypeMinLOD {
                get {
                    return ((bool)(this[this.tableDoDs.TypeMinLODColumn]));
                }
                set {
                    this[this.tableDoDs.TypeMinLODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TypePropagated {
                get {
                    return ((bool)(this[this.tableDoDs.TypePropagatedColumn]));
                }
                set {
                    this[this.tableDoDs.TypePropagatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TypeProbabilistic {
                get {
                    return ((bool)(this[this.tableDoDs.TypeProbabilisticColumn]));
                }
                set {
                    this[this.tableDoDs.TypeProbabilisticColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Threshold {
                get {
                    try {
                        return ((double)(this[this.tableDoDs.ThresholdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Threshold\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.ThresholdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Bayesian {
                get {
                    try {
                        return ((bool)(this[this.tableDoDs.BayesianColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bayesian\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.BayesianColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Filter {
                get {
                    try {
                        return ((int)(this[this.tableDoDs.FilterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Filter\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.FilterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PercentLess {
                get {
                    try {
                        return ((int)(this[this.tableDoDs.PercentLessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PercentLess\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.PercentLessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PercentMore {
                get {
                    try {
                        return ((int)(this[this.tableDoDs.PercentMoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PercentMore\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.PercentMoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RawDoDPath {
                get {
                    return ((string)(this[this.tableDoDs.RawDoDPathColumn]));
                }
                set {
                    this[this.tableDoDs.RawDoDPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ThreshDoDPath {
                get {
                    return ((string)(this[this.tableDoDs.ThreshDoDPathColumn]));
                }
                set {
                    this[this.tableDoDs.ThreshDoDPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RawHistPath {
                get {
                    try {
                        return ((string)(this[this.tableDoDs.RawHistPathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RawHistPath\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.RawHistPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ThreshHistPath {
                get {
                    try {
                        return ((string)(this[this.tableDoDs.ThreshHistPathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThreshHistPath\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.ThreshHistPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SummaryXMLPath {
                get {
                    try {
                        return ((string)(this[this.tableDoDs.SummaryXMLPathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SummaryXMLPath\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.SummaryXMLPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CellArea {
                get {
                    try {
                        return ((double)(this[this.tableDoDs.CellAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CellArea\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.CellAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AreaErosionRaw {
                get {
                    try {
                        return ((double)(this[this.tableDoDs.AreaErosionRawColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreaErosionRaw\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.AreaErosionRawColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AreaDepositonRaw {
                get {
                    try {
                        return ((double)(this[this.tableDoDs.AreaDepositonRawColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreaDepositonRaw\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.AreaDepositonRawColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AreaErosionThresholded {
                get {
                    try {
                        return ((double)(this[this.tableDoDs.AreaErosionThresholdedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreaErosionThresholded\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.AreaErosionThresholdedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AreaDepositionThresholded {
                get {
                    try {
                        return ((double)(this[this.tableDoDs.AreaDepositionThresholdedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreaDepositionThresholded\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.AreaDepositionThresholdedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VolumeErosionRaw {
                get {
                    try {
                        return ((double)(this[this.tableDoDs.VolumeErosionRawColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VolumeErosionRaw\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.VolumeErosionRawColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VolumeDepositionRaw {
                get {
                    try {
                        return ((double)(this[this.tableDoDs.VolumeDepositionRawColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VolumeDepositionRaw\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.VolumeDepositionRawColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VolumeErosionThresholded {
                get {
                    try {
                        return ((double)(this[this.tableDoDs.VolumeErosionThresholdedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VolumeErosionThresholded\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.VolumeErosionThresholdedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VolumeDepositionThresholded {
                get {
                    try {
                        return ((double)(this[this.tableDoDs.VolumeDepositionThresholdedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VolumeDepositionThresholded\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.VolumeDepositionThresholdedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VolumeErosionError {
                get {
                    try {
                        return ((double)(this[this.tableDoDs.VolumeErosionErrorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VolumeErosionError\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.VolumeErosionErrorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VolumeDepositionError {
                get {
                    try {
                        return ((double)(this[this.tableDoDs.VolumeDepositionErrorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VolumeDepositionError\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.VolumeDepositionErrorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PropagatedErrorRasterPath {
                get {
                    try {
                        return ((string)(this[this.tableDoDs.PropagatedErrorRasterPathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropagatedErrorRasterPath\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.PropagatedErrorRasterPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProbabilityRaster {
                get {
                    try {
                        return ((string)(this[this.tableDoDs.ProbabilityRasterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProbabilityRaster\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.ProbabilityRasterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConditionalProbRaster {
                get {
                    try {
                        return ((string)(this[this.tableDoDs.ConditionalProbRasterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConditionalProbRaster\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.ConditionalProbRasterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PosteriorRaster {
                get {
                    try {
                        return ((string)(this[this.tableDoDs.PosteriorRasterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosteriorRaster\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.PosteriorRasterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SpatialCoDepositionRaster {
                get {
                    try {
                        return ((string)(this[this.tableDoDs.SpatialCoDepositionRasterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpatialCoDepositionRaster\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.SpatialCoDepositionRasterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SpatialCoErosionRaster {
                get {
                    try {
                        return ((string)(this[this.tableDoDs.SpatialCoErosionRasterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpatialCoErosionRaster\' in table \'DoDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoDs.SpatialCoErosionRasterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectRow ProjectRow {
                get {
                    return ((ProjectRow)(this.GetParentRow(this.Table.ParentRelations["FK_Project_DoDTable"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Project_DoDTable"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNewErrorNameNull() {
                return this.IsNull(this.tableDoDs.NewErrorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNewErrorNameNull() {
                this[this.tableDoDs.NewErrorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOldErrorNameNull() {
                return this.IsNull(this.tableDoDs.OldErrorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOldErrorNameNull() {
                this[this.tableDoDs.OldErrorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThresholdNull() {
                return this.IsNull(this.tableDoDs.ThresholdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThresholdNull() {
                this[this.tableDoDs.ThresholdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBayesianNull() {
                return this.IsNull(this.tableDoDs.BayesianColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBayesianNull() {
                this[this.tableDoDs.BayesianColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFilterNull() {
                return this.IsNull(this.tableDoDs.FilterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFilterNull() {
                this[this.tableDoDs.FilterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPercentLessNull() {
                return this.IsNull(this.tableDoDs.PercentLessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPercentLessNull() {
                this[this.tableDoDs.PercentLessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPercentMoreNull() {
                return this.IsNull(this.tableDoDs.PercentMoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPercentMoreNull() {
                this[this.tableDoDs.PercentMoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRawHistPathNull() {
                return this.IsNull(this.tableDoDs.RawHistPathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRawHistPathNull() {
                this[this.tableDoDs.RawHistPathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThreshHistPathNull() {
                return this.IsNull(this.tableDoDs.ThreshHistPathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThreshHistPathNull() {
                this[this.tableDoDs.ThreshHistPathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSummaryXMLPathNull() {
                return this.IsNull(this.tableDoDs.SummaryXMLPathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSummaryXMLPathNull() {
                this[this.tableDoDs.SummaryXMLPathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCellAreaNull() {
                return this.IsNull(this.tableDoDs.CellAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCellAreaNull() {
                this[this.tableDoDs.CellAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAreaErosionRawNull() {
                return this.IsNull(this.tableDoDs.AreaErosionRawColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAreaErosionRawNull() {
                this[this.tableDoDs.AreaErosionRawColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAreaDepositonRawNull() {
                return this.IsNull(this.tableDoDs.AreaDepositonRawColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAreaDepositonRawNull() {
                this[this.tableDoDs.AreaDepositonRawColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAreaErosionThresholdedNull() {
                return this.IsNull(this.tableDoDs.AreaErosionThresholdedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAreaErosionThresholdedNull() {
                this[this.tableDoDs.AreaErosionThresholdedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAreaDepositionThresholdedNull() {
                return this.IsNull(this.tableDoDs.AreaDepositionThresholdedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAreaDepositionThresholdedNull() {
                this[this.tableDoDs.AreaDepositionThresholdedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVolumeErosionRawNull() {
                return this.IsNull(this.tableDoDs.VolumeErosionRawColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVolumeErosionRawNull() {
                this[this.tableDoDs.VolumeErosionRawColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVolumeDepositionRawNull() {
                return this.IsNull(this.tableDoDs.VolumeDepositionRawColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVolumeDepositionRawNull() {
                this[this.tableDoDs.VolumeDepositionRawColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVolumeErosionThresholdedNull() {
                return this.IsNull(this.tableDoDs.VolumeErosionThresholdedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVolumeErosionThresholdedNull() {
                this[this.tableDoDs.VolumeErosionThresholdedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVolumeDepositionThresholdedNull() {
                return this.IsNull(this.tableDoDs.VolumeDepositionThresholdedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVolumeDepositionThresholdedNull() {
                this[this.tableDoDs.VolumeDepositionThresholdedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVolumeErosionErrorNull() {
                return this.IsNull(this.tableDoDs.VolumeErosionErrorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVolumeErosionErrorNull() {
                this[this.tableDoDs.VolumeErosionErrorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVolumeDepositionErrorNull() {
                return this.IsNull(this.tableDoDs.VolumeDepositionErrorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVolumeDepositionErrorNull() {
                this[this.tableDoDs.VolumeDepositionErrorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPropagatedErrorRasterPathNull() {
                return this.IsNull(this.tableDoDs.PropagatedErrorRasterPathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPropagatedErrorRasterPathNull() {
                this[this.tableDoDs.PropagatedErrorRasterPathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProbabilityRasterNull() {
                return this.IsNull(this.tableDoDs.ProbabilityRasterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProbabilityRasterNull() {
                this[this.tableDoDs.ProbabilityRasterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConditionalProbRasterNull() {
                return this.IsNull(this.tableDoDs.ConditionalProbRasterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConditionalProbRasterNull() {
                this[this.tableDoDs.ConditionalProbRasterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPosteriorRasterNull() {
                return this.IsNull(this.tableDoDs.PosteriorRasterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPosteriorRasterNull() {
                this[this.tableDoDs.PosteriorRasterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpatialCoDepositionRasterNull() {
                return this.IsNull(this.tableDoDs.SpatialCoDepositionRasterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpatialCoDepositionRasterNull() {
                this[this.tableDoDs.SpatialCoDepositionRasterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpatialCoErosionRasterNull() {
                return this.IsNull(this.tableDoDs.SpatialCoErosionRasterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpatialCoErosionRasterNull() {
                this[this.tableDoDs.SpatialCoErosionRasterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BudgetSegregationsRow[] GetBudgetSegregationsRows() {
                if ((this.Table.ChildRelations["FK_DoDs_BudgetSegregations"] == null)) {
                    return new BudgetSegregationsRow[0];
                }
                else {
                    return ((BudgetSegregationsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_DoDs_BudgetSegregations"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BudgetSegregationsRow : global::System.Data.DataRow {
            
            private BudgetSegregationsDataTable tableBudgetSegregations;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BudgetSegregationsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBudgetSegregations = ((BudgetSegregationsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BudgetID {
                get {
                    return ((int)(this[this.tableBudgetSegregations.BudgetIDColumn]));
                }
                set {
                    this[this.tableBudgetSegregations.BudgetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DoDID {
                get {
                    return ((int)(this[this.tableBudgetSegregations.DoDIDColumn]));
                }
                set {
                    this[this.tableBudgetSegregations.DoDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableBudgetSegregations.NameColumn]));
                }
                set {
                    this[this.tableBudgetSegregations.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PolygonMask {
                get {
                    return ((string)(this[this.tableBudgetSegregations.PolygonMaskColumn]));
                }
                set {
                    this[this.tableBudgetSegregations.PolygonMaskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Field {
                get {
                    return ((string)(this[this.tableBudgetSegregations.FieldColumn]));
                }
                set {
                    this[this.tableBudgetSegregations.FieldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OutputFolder {
                get {
                    return ((string)(this[this.tableBudgetSegregations.OutputFolderColumn]));
                }
                set {
                    this[this.tableBudgetSegregations.OutputFolderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PCDepositoonVolPie {
                get {
                    try {
                        return ((string)(this[this.tableBudgetSegregations.PCDepositoonVolPieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCDepositoonVolPie\' in table \'BudgetSegregations\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableBudgetSegregations.PCDepositoonVolPieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PCErosionVolPie {
                get {
                    try {
                        return ((string)(this[this.tableBudgetSegregations.PCErosionVolPieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCErosionVolPie\' in table \'BudgetSegregations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBudgetSegregations.PCErosionVolPieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PCTotalVolPie {
                get {
                    try {
                        return ((string)(this[this.tableBudgetSegregations.PCTotalVolPieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCTotalVolPie\' in table \'BudgetSegregations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBudgetSegregations.PCTotalVolPieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClassLegendPath {
                get {
                    try {
                        return ((string)(this[this.tableBudgetSegregations.ClassLegendPathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassLegendPath\' in table \'BudgetSegregations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBudgetSegregations.ClassLegendPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClassSummaryPath {
                get {
                    try {
                        return ((string)(this[this.tableBudgetSegregations.ClassSummaryPathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassSummaryPath\' in table \'BudgetSegregations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBudgetSegregations.ClassSummaryPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DoDsRow DoDsRow {
                get {
                    return ((DoDsRow)(this.GetParentRow(this.Table.ParentRelations["FK_DoDs_BudgetSegregations"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DoDs_BudgetSegregations"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCDepositoonVolPieNull() {
                return this.IsNull(this.tableBudgetSegregations.PCDepositoonVolPieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCDepositoonVolPieNull() {
                this[this.tableBudgetSegregations.PCDepositoonVolPieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCErosionVolPieNull() {
                return this.IsNull(this.tableBudgetSegregations.PCErosionVolPieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCErosionVolPieNull() {
                this[this.tableBudgetSegregations.PCErosionVolPieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCTotalVolPieNull() {
                return this.IsNull(this.tableBudgetSegregations.PCTotalVolPieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCTotalVolPieNull() {
                this[this.tableBudgetSegregations.PCTotalVolPieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClassLegendPathNull() {
                return this.IsNull(this.tableBudgetSegregations.ClassLegendPathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClassLegendPathNull() {
                this[this.tableBudgetSegregations.ClassLegendPathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClassSummaryPathNull() {
                return this.IsNull(this.tableBudgetSegregations.ClassSummaryPathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClassSummaryPathNull() {
                this[this.tableBudgetSegregations.ClassSummaryPathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BSMasksRow[] GetBSMasksRows() {
                if ((this.Table.ChildRelations["FK_BudgetSegregations_BSMasks"] == null)) {
                    return new BSMasksRow[0];
                }
                else {
                    return ((BSMasksRow[])(base.GetChildRows(this.Table.ChildRelations["FK_BudgetSegregations_BSMasks"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BSMasksRow : global::System.Data.DataRow {
            
            private BSMasksDataTable tableBSMasks;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BSMasksRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBSMasks = ((BSMasksDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaskID {
                get {
                    return ((int)(this[this.tableBSMasks.MaskIDColumn]));
                }
                set {
                    this[this.tableBSMasks.MaskIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BudgetID {
                get {
                    return ((int)(this[this.tableBSMasks.BudgetIDColumn]));
                }
                set {
                    this[this.tableBSMasks.BudgetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaskValue {
                get {
                    try {
                        return ((int)(this[this.tableBSMasks.MaskValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaskValue\' in table \'BSMasks\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBSMasks.MaskValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MaskName {
                get {
                    return ((string)(this[this.tableBSMasks.MaskNameColumn]));
                }
                set {
                    this[this.tableBSMasks.MaskNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AreaErosionRaw {
                get {
                    try {
                        return ((double)(this[this.tableBSMasks.AreaErosionRawColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreaErosionRaw\' in table \'BSMasks\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBSMasks.AreaErosionRawColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AreaDepositionRaw {
                get {
                    try {
                        return ((double)(this[this.tableBSMasks.AreaDepositionRawColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreaDepositionRaw\' in table \'BSMasks\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBSMasks.AreaDepositionRawColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AreaErosionThresholded {
                get {
                    try {
                        return ((double)(this[this.tableBSMasks.AreaErosionThresholdedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreaErosionThresholded\' in table \'BSMasks\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBSMasks.AreaErosionThresholdedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AreaDepositionThresholded {
                get {
                    try {
                        return ((double)(this[this.tableBSMasks.AreaDepositionThresholdedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreaDepositionThresholded\' in table \'BSMasks\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBSMasks.AreaDepositionThresholdedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VolumeErosionRaw {
                get {
                    try {
                        return ((double)(this[this.tableBSMasks.VolumeErosionRawColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VolumeErosionRaw\' in table \'BSMasks\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBSMasks.VolumeErosionRawColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VolumeDepositionRaw {
                get {
                    try {
                        return ((double)(this[this.tableBSMasks.VolumeDepositionRawColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VolumeDepositionRaw\' in table \'BSMasks\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBSMasks.VolumeDepositionRawColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VolumeErosionThresholded {
                get {
                    try {
                        return ((double)(this[this.tableBSMasks.VolumeErosionThresholdedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VolumeErosionThresholded\' in table \'BSMasks\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBSMasks.VolumeErosionThresholdedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VolumeDepositionThresholded {
                get {
                    try {
                        return ((double)(this[this.tableBSMasks.VolumeDepositionThresholdedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VolumeDepositionThresholded\' in table \'BSMasks\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBSMasks.VolumeDepositionThresholdedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VolumeErosionError {
                get {
                    try {
                        return ((double)(this[this.tableBSMasks.VolumeErosionErrorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VolumeErosionError\' in table \'BSMasks\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBSMasks.VolumeErosionErrorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VolumeDepositionError {
                get {
                    try {
                        return ((double)(this[this.tableBSMasks.VolumeDepositionErrorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VolumeDepositionError\' in table \'BSMasks\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBSMasks.VolumeDepositionErrorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AreaChartPath {
                get {
                    try {
                        return ((string)(this[this.tableBSMasks.AreaChartPathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreaChartPath\' in table \'BSMasks\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBSMasks.AreaChartPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VolumeChartPath {
                get {
                    try {
                        return ((string)(this[this.tableBSMasks.VolumeChartPathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VolumeChartPath\' in table \'BSMasks\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBSMasks.VolumeChartPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SummaryXMLPath {
                get {
                    try {
                        return ((string)(this[this.tableBSMasks.SummaryXMLPathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SummaryXMLPath\' in table \'BSMasks\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBSMasks.SummaryXMLPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CSVFileName {
                get {
                    try {
                        return ((string)(this[this.tableBSMasks.CSVFileNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSVFileName\' in table \'BSMasks\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBSMasks.CSVFileNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BudgetSegregationsRow BudgetSegregationsRow {
                get {
                    return ((BudgetSegregationsRow)(this.GetParentRow(this.Table.ParentRelations["FK_BudgetSegregations_BSMasks"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_BudgetSegregations_BSMasks"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaskValueNull() {
                return this.IsNull(this.tableBSMasks.MaskValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaskValueNull() {
                this[this.tableBSMasks.MaskValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAreaErosionRawNull() {
                return this.IsNull(this.tableBSMasks.AreaErosionRawColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAreaErosionRawNull() {
                this[this.tableBSMasks.AreaErosionRawColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAreaDepositionRawNull() {
                return this.IsNull(this.tableBSMasks.AreaDepositionRawColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAreaDepositionRawNull() {
                this[this.tableBSMasks.AreaDepositionRawColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAreaErosionThresholdedNull() {
                return this.IsNull(this.tableBSMasks.AreaErosionThresholdedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAreaErosionThresholdedNull() {
                this[this.tableBSMasks.AreaErosionThresholdedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAreaDepositionThresholdedNull() {
                return this.IsNull(this.tableBSMasks.AreaDepositionThresholdedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAreaDepositionThresholdedNull() {
                this[this.tableBSMasks.AreaDepositionThresholdedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVolumeErosionRawNull() {
                return this.IsNull(this.tableBSMasks.VolumeErosionRawColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVolumeErosionRawNull() {
                this[this.tableBSMasks.VolumeErosionRawColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVolumeDepositionRawNull() {
                return this.IsNull(this.tableBSMasks.VolumeDepositionRawColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVolumeDepositionRawNull() {
                this[this.tableBSMasks.VolumeDepositionRawColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVolumeErosionThresholdedNull() {
                return this.IsNull(this.tableBSMasks.VolumeErosionThresholdedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVolumeErosionThresholdedNull() {
                this[this.tableBSMasks.VolumeErosionThresholdedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVolumeDepositionThresholdedNull() {
                return this.IsNull(this.tableBSMasks.VolumeDepositionThresholdedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVolumeDepositionThresholdedNull() {
                this[this.tableBSMasks.VolumeDepositionThresholdedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVolumeErosionErrorNull() {
                return this.IsNull(this.tableBSMasks.VolumeErosionErrorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVolumeErosionErrorNull() {
                this[this.tableBSMasks.VolumeErosionErrorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVolumeDepositionErrorNull() {
                return this.IsNull(this.tableBSMasks.VolumeDepositionErrorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVolumeDepositionErrorNull() {
                this[this.tableBSMasks.VolumeDepositionErrorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAreaChartPathNull() {
                return this.IsNull(this.tableBSMasks.AreaChartPathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAreaChartPathNull() {
                this[this.tableBSMasks.AreaChartPathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVolumeChartPathNull() {
                return this.IsNull(this.tableBSMasks.VolumeChartPathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVolumeChartPathNull() {
                this[this.tableBSMasks.VolumeChartPathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSummaryXMLPathNull() {
                return this.IsNull(this.tableBSMasks.SummaryXMLPathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSummaryXMLPathNull() {
                this[this.tableBSMasks.SummaryXMLPathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCSVFileNameNull() {
                return this.IsNull(this.tableBSMasks.CSVFileNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCSVFileNameNull() {
                this[this.tableBSMasks.CSVFileNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AOIsRow : global::System.Data.DataRow {
            
            private AOIsDataTable tableAOIs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AOIsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAOIs = ((AOIsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AOIID {
                get {
                    return ((int)(this[this.tableAOIs.AOIIDColumn]));
                }
                set {
                    this[this.tableAOIs.AOIIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableAOIs.ProjectIDColumn]));
                }
                set {
                    this[this.tableAOIs.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableAOIs.NameColumn]));
                }
                set {
                    this[this.tableAOIs.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Source {
                get {
                    try {
                        return ((string)(this[this.tableAOIs.SourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Source\' in table \'AOIs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAOIs.SourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OriginalSource {
                get {
                    try {
                        return ((string)(this[this.tableAOIs.OriginalSourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalSource\' in table \'AOIs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAOIs.OriginalSourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectRow ProjectRow {
                get {
                    return ((ProjectRow)(this.GetParentRow(this.Table.ParentRelations["FK_Project_AOIs"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Project_AOIs"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSourceNull() {
                return this.IsNull(this.tableAOIs.SourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSourceNull() {
                this[this.tableAOIs.SourceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginalSourceNull() {
                return this.IsNull(this.tableAOIs.OriginalSourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginalSourceNull() {
                this[this.tableAOIs.OriginalSourceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WaterSurfacesRow : global::System.Data.DataRow {
            
            private WaterSurfacesDataTable tableWaterSurfaces;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WaterSurfacesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWaterSurfaces = ((WaterSurfacesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int WaterSurfaceID {
                get {
                    try {
                        return ((int)(this[this.tableWaterSurfaces.WaterSurfaceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WaterSurfaceID\' in table \'WaterSurfaces\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWaterSurfaces.WaterSurfaceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Elevation {
                get {
                    try {
                        return ((double)(this[this.tableWaterSurfaces.ElevationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Elevation\' in table \'WaterSurfaces\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWaterSurfaces.ElevationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Source {
                get {
                    try {
                        return ((string)(this[this.tableWaterSurfaces.SourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Source\' in table \'WaterSurfaces\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWaterSurfaces.SourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableWaterSurfaces.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'WaterSurfaces\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWaterSurfaces.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWaterSurfaceIDNull() {
                return this.IsNull(this.tableWaterSurfaces.WaterSurfaceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWaterSurfaceIDNull() {
                this[this.tableWaterSurfaces.WaterSurfaceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsElevationNull() {
                return this.IsNull(this.tableWaterSurfaces.ElevationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetElevationNull() {
                this[this.tableWaterSurfaces.ElevationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSourceNull() {
                return this.IsNull(this.tableWaterSurfaces.SourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSourceNull() {
                this[this.tableWaterSurfaces.SourceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableWaterSurfaces.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableWaterSurfaces.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ReservoirAnalysisRow[] GetReservoirAnalysisRows() {
                if ((this.Table.ChildRelations["WaterSurfaces_Reservoir"] == null)) {
                    return new ReservoirAnalysisRow[0];
                }
                else {
                    return ((ReservoirAnalysisRow[])(base.GetChildRows(this.Table.ChildRelations["WaterSurfaces_Reservoir"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ReservoirAnalysisRow : global::System.Data.DataRow {
            
            private ReservoirAnalysisDataTable tableReservoirAnalysis;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ReservoirAnalysisRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReservoirAnalysis = ((ReservoirAnalysisDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ReservoirAnalysisID {
                get {
                    return ((int)(this[this.tableReservoirAnalysis.ReservoirAnalysisIDColumn]));
                }
                set {
                    this[this.tableReservoirAnalysis.ReservoirAnalysisIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DEMSurveyID {
                get {
                    return ((int)(this[this.tableReservoirAnalysis.DEMSurveyIDColumn]));
                }
                set {
                    this[this.tableReservoirAnalysis.DEMSurveyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ErrorID {
                get {
                    return ((int)(this[this.tableReservoirAnalysis.ErrorIDColumn]));
                }
                set {
                    this[this.tableReservoirAnalysis.ErrorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int WaterSurfaceID {
                get {
                    return ((int)(this[this.tableReservoirAnalysis.WaterSurfaceIDColumn]));
                }
                set {
                    this[this.tableReservoirAnalysis.WaterSurfaceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginal {
                get {
                    return ((bool)(this[this.tableReservoirAnalysis.IsOriginalColumn]));
                }
                set {
                    this[this.tableReservoirAnalysis.IsOriginalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MaxDepth {
                get {
                    try {
                        return ((double)(this[this.tableReservoirAnalysis.MaxDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDepth\' in table \'ReservoirAnalysis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReservoirAnalysis.MaxDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MaxDepthPM {
                get {
                    try {
                        return ((double)(this[this.tableReservoirAnalysis.MaxDepthPMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDepthPM\' in table \'ReservoirAnalysis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReservoirAnalysis.MaxDepthPMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MeanDepth {
                get {
                    try {
                        return ((double)(this[this.tableReservoirAnalysis.MeanDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeanDepth\' in table \'ReservoirAnalysis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReservoirAnalysis.MeanDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RawArea {
                get {
                    try {
                        return ((double)(this[this.tableReservoirAnalysis.RawAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RawArea\' in table \'ReservoirAnalysis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReservoirAnalysis.RawAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MinArea {
                get {
                    try {
                        return ((double)(this[this.tableReservoirAnalysis.MinAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinArea\' in table \'ReservoirAnalysis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReservoirAnalysis.MinAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RawVolume {
                get {
                    try {
                        return ((double)(this[this.tableReservoirAnalysis.RawVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RawVolume\' in table \'ReservoirAnalysis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReservoirAnalysis.RawVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MinVolume {
                get {
                    try {
                        return ((double)(this[this.tableReservoirAnalysis.MinVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinVolume\' in table \'ReservoirAnalysis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReservoirAnalysis.MinVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MaxArea {
                get {
                    try {
                        return ((double)(this[this.tableReservoirAnalysis.MaxAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxArea\' in table \'ReservoirAnalysis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReservoirAnalysis.MaxAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MaxVolume {
                get {
                    try {
                        return ((double)(this[this.tableReservoirAnalysis.MaxVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxVolume\' in table \'ReservoirAnalysis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReservoirAnalysis.MaxVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WaterSurfacesRow WaterSurfacesRow {
                get {
                    return ((WaterSurfacesRow)(this.GetParentRow(this.Table.ParentRelations["WaterSurfaces_Reservoir"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["WaterSurfaces_Reservoir"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEMSurveyRow DEMSurveyRow {
                get {
                    return ((DEMSurveyRow)(this.GetParentRow(this.Table.ParentRelations["FK_DEMSurvey_Reservoir"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DEMSurvey_Reservoir"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ErrorSurfaceRow ErrorTableRow {
                get {
                    return ((ErrorSurfaceRow)(this.GetParentRow(this.Table.ParentRelations["FK_ErrorTable_Reservoir"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ErrorTable_Reservoir"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDepthNull() {
                return this.IsNull(this.tableReservoirAnalysis.MaxDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDepthNull() {
                this[this.tableReservoirAnalysis.MaxDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDepthPMNull() {
                return this.IsNull(this.tableReservoirAnalysis.MaxDepthPMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDepthPMNull() {
                this[this.tableReservoirAnalysis.MaxDepthPMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMeanDepthNull() {
                return this.IsNull(this.tableReservoirAnalysis.MeanDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMeanDepthNull() {
                this[this.tableReservoirAnalysis.MeanDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRawAreaNull() {
                return this.IsNull(this.tableReservoirAnalysis.RawAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRawAreaNull() {
                this[this.tableReservoirAnalysis.RawAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMinAreaNull() {
                return this.IsNull(this.tableReservoirAnalysis.MinAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMinAreaNull() {
                this[this.tableReservoirAnalysis.MinAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRawVolumeNull() {
                return this.IsNull(this.tableReservoirAnalysis.RawVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRawVolumeNull() {
                this[this.tableReservoirAnalysis.RawVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMinVolumeNull() {
                return this.IsNull(this.tableReservoirAnalysis.MinVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMinVolumeNull() {
                this[this.tableReservoirAnalysis.MinVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxAreaNull() {
                return this.IsNull(this.tableReservoirAnalysis.MaxAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxAreaNull() {
                this[this.tableReservoirAnalysis.MaxAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxVolumeNull() {
                return this.IsNull(this.tableReservoirAnalysis.MaxVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxVolumeNull() {
                this[this.tableReservoirAnalysis.MaxVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ReservoirRow[] GetReservoirRows() {
                if ((this.Table.ChildRelations["FK_ReservoirAnalysis_Reservoir"] == null)) {
                    return new ReservoirRow[0];
                }
                else {
                    return ((ReservoirRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ReservoirAnalysis_Reservoir"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ReservoirRow : global::System.Data.DataRow {
            
            private ReservoirDataTable tableReservoir;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ReservoirRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReservoir = ((ReservoirDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ReservoirID {
                get {
                    return ((int)(this[this.tableReservoir.ReservoirIDColumn]));
                }
                set {
                    this[this.tableReservoir.ReservoirIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ReservoirAnalysisID {
                get {
                    return ((int)(this[this.tableReservoir.ReservoirAnalysisIDColumn]));
                }
                set {
                    this[this.tableReservoir.ReservoirAnalysisIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BathRaster {
                get {
                    return ((string)(this[this.tableReservoir.BathRasterColumn]));
                }
                set {
                    this[this.tableReservoir.BathRasterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DepthRaster {
                get {
                    return ((string)(this[this.tableReservoir.DepthRasterColumn]));
                }
                set {
                    this[this.tableReservoir.DepthRasterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VolumeRaster {
                get {
                    return ((string)(this[this.tableReservoir.VolumeRasterColumn]));
                }
                set {
                    this[this.tableReservoir.VolumeRasterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Type {
                get {
                    return ((string)(this[this.tableReservoir.TypeColumn]));
                }
                set {
                    this[this.tableReservoir.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StatsTable {
                get {
                    return ((string)(this[this.tableReservoir.StatsTableColumn]));
                }
                set {
                    this[this.tableReservoir.StatsTableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MaskRaster {
                get {
                    try {
                        return ((string)(this[this.tableReservoir.MaskRasterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaskRaster\' in table \'Reservoir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReservoir.MaskRasterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ReservoirAnalysisRow ReservoirAnalysisRow {
                get {
                    return ((ReservoirAnalysisRow)(this.GetParentRow(this.Table.ParentRelations["FK_ReservoirAnalysis_Reservoir"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ReservoirAnalysis_Reservoir"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaskRasterNull() {
                return this.IsNull(this.tableReservoir.MaskRasterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaskRasterNull() {
                this[this.tableReservoir.MaskRasterColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProjectRowChangeEvent : global::System.EventArgs {
            
            private ProjectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectRowChangeEvent(ProjectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DEMSurveyRowChangeEvent : global::System.EventArgs {
            
            private DEMSurveyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEMSurveyRowChangeEvent(DEMSurveyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEMSurveyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AssociatedSurfaceRowChangeEvent : global::System.EventArgs {
            
            private AssociatedSurfaceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AssociatedSurfaceRowChangeEvent(AssociatedSurfaceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AssociatedSurfaceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ErrorSurfaceRowChangeEvent : global::System.EventArgs {
            
            private ErrorSurfaceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ErrorSurfaceRowChangeEvent(ErrorSurfaceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ErrorSurfaceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MultiErrorPropertiesRowChangeEvent : global::System.EventArgs {
            
            private MultiErrorPropertiesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MultiErrorPropertiesRowChangeEvent(MultiErrorPropertiesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MultiErrorPropertiesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FISInputsRowChangeEvent : global::System.EventArgs {
            
            private FISInputsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FISInputsRowChangeEvent(FISInputsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FISInputsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DoDsRowChangeEvent : global::System.EventArgs {
            
            private DoDsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DoDsRowChangeEvent(DoDsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DoDsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BudgetSegregationsRowChangeEvent : global::System.EventArgs {
            
            private BudgetSegregationsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BudgetSegregationsRowChangeEvent(BudgetSegregationsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BudgetSegregationsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BSMasksRowChangeEvent : global::System.EventArgs {
            
            private BSMasksRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BSMasksRowChangeEvent(BSMasksRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BSMasksRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AOIsRowChangeEvent : global::System.EventArgs {
            
            private AOIsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AOIsRowChangeEvent(AOIsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AOIsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class WaterSurfacesRowChangeEvent : global::System.EventArgs {
            
            private WaterSurfacesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WaterSurfacesRowChangeEvent(WaterSurfacesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WaterSurfacesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ReservoirAnalysisRowChangeEvent : global::System.EventArgs {
            
            private ReservoirAnalysisRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ReservoirAnalysisRowChangeEvent(ReservoirAnalysisRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ReservoirAnalysisRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ReservoirRowChangeEvent : global::System.EventArgs {
            
            private ReservoirRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ReservoirRowChangeEvent(ReservoirRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ReservoirRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591